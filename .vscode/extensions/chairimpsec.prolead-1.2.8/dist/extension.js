(()=>{"use strict";var e={684:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigProvider=void 0;const a=i(496),n=i(147);t.ConfigProvider=class{constructor(e){this.projectFolder="",this.argsPath="",this.configPath="",this.extPath=e,this.allARGS=["code_folder","library_file","library_name","design_file","module_name","config_file","linker_file","result_folder"],this.allCONFIGS=["no_of_test_clock_cycles","probes_include","probes_exclude","compact_distributions","minimize_probe_sets","effect_size","order_of_test","transitional_leakage","multivariate_test","max_distance_multivariate","no_of_groups","clock_signal_name","max_clock_cycle","end_condition","end_wait_cycles","no_of_initial_inputs","no_of_initial_clock_cycles","no_of_always_random_inputs","no_of_outputs","expected_output","max_no_of_threads","no_of_simulations","no_of_step_simulations","no_of_step_write_results","no_of_entries_in_report","remove_full_probing_sets","no_of_probing_sets_per_step"],this.codeFolder={value:this.default("code_folder"),importance:"optional",details:""},this.libraryFile={value:this.default("library_file"),importance:"mandatory",details:"Sets the specified library file as the standard library file for simulation. The library file should define the functional behavior of each cell in the netlist. Such a file is required for the simulator of PROLEAD to understand how to simulate the cells.\n\nValue: a valid path to a library file that ends with '.lib'."},this.libraryName={value:this.default("library_name"),importance:"mandatory",details:"Sets the specified library name as the standard library name. The library name identifies a unique library in the library file. This is important is multiple libraries are defined in the same library file.\n\nValue: a name of a library that is used in the Library File."},this.designFile={value:this.default("design_file"),importance:"mandatory",details:"Sets the specified design file as the standard design file. The design file specifies a gate-level netlist written in Verilog. Such a netlist is produced by synthesizing the circuit's behavioral description.\n\nValue: a valid path to a library file that ends with '.v'."},this.moduleName={value:this.default("module_name"),importance:"mandatory",details:"Sets the specified module name as the standard module name. The module name specifies the name of the topmodule in the netlist.\n\nValue: a name of a module that is used in the Design File."},this.configFile={value:this.default("config_file"),importance:"mandatory",details:"Sets the specified config file as the standard config file. The config file defines the evaluation settings.\n\nValue: a valid path to a library file that ends with '.set'."},this.linkerFile={value:this.default("linker_file"),importance:"optional",details:"Sets the specified linker file as the standard linker file.\n\nValue: a valid path to a library file that ends with '.ld'."},this.resultFolder={value:this.default("result_folder"),importance:"mandatory",details:"Sets the specified result folder as the standard result folder. All reports are stored in the result folder.\n\nValue: a valid path to a folder."},this.noOfTestClockCycles={value:this.default("no_of_test_clock_cycles"),importance:"mandatory",details:"The no_of_test_clock_cycles setting allows the specification of clock cycles to evaluate. This means that the evaluation can consider only specific clock cycles (up to max_clock_cycle). Specify ranges of clock cycles by using the - notation.\n\nValue: Number of cycle ranges should be integer and greater than 0, and clock cycle ranges should be seperated by '-' like 1-2."},this.probesInclude={value:this.default("probes_include"),importance:"mandatory",details:"Specifies the wires which should be included for probing.\n\nValue: Number of wires to include should be integer and greater or equal to 0 or 'all', the signal names should be a string with Verilog syntax."},this.probesExclude={value:this.default("probes_exclude"),importance:"mandatory",details:"Specifies the wires which should be excluded for probing.\n\nValue: Number of wires to exclude should be integer and greater or equal to 0 or 'all', the signal names should be a string with Verilog syntax."},this.compactDistributions={value:this.default("compact_distributions"),importance:"mandatory",details:"The compact mode is less accurate compared to the normal mode while requiring less RAM. It is recommended to use to evaluate large circuits at high security order in the compact mode.\n\nDecision: yes/no"},this.minimizeProbeSets={value:this.default("minimize_probe_sets"),importance:"mandatory",details:"To accelerate the evaluation, PROLEAD can remove probing sets that are fully covered by other probing sets. This leads to a smaller set of probing sets to evaluate. However, searching for covered probing sets is time-consuming. It is recommended to use yes only for small circuits and low security orders due to high complexity.\n\nDecision: yes/no"},this.effectSize={value:this.default("effect_size"),importance:"mandatory",details:"In the normal mode, the user can adjust the statistical effect size for a tradeoff between accuracy and runtime. We remark that the effect size has a direct impact on the number of required traces. Hence, a smaller effect size increases the number of required traces while capturing smaller effects. It is recommended to use the default setting of 0.1 even for low security orders.\n\nValue: Effect size should be of type double and greater than 0 (default 0.1)"},this.orderOfTest={value:this.default("order_of_test"),importance:"mandatory",details:"To define the underlying adversary model, the user needs to specify the security order to evaluate with the order_of_test setting. According to the robust-probing model this setting specifies how many probes an adversary is allowed to place.\n\nValue: Security order should be an integer and greater than 0."},this.transitionalLeakage={value:this.default("transitional_leakage"),importance:"mandatory",details:"By default, all PROLEAD evaluates adversaries under the glitch-extended probing model. If the user wants to consider transitions as well, the transitional_leakage setting must be set to yes.\n\nDecision: yes/no (default no)"},this.multivariateTest={value:this.default("multivariate_test"),importance:"mandatory",details:"The user can consider univariate and multivariate adversaries by adjusting the multivariate_test setting.\n\nDecision: yes/no/exclusive (default no)"},this.maxDistanceMultivariate={value:this.default("max_distance_multivariate"),importance:"mandatory",details:"To allow a more fine-grained multivariate analysis, the user can restrict multivariate adversaries to place probes only within a given distance of time. This means that only probing sets are considered which have a smaller maximum distance than max_distance_multivariate.\n\nValue: Maximum distance should be an integer and greater or equal to 0 (default 10)"},this.noOfGroups={value:this.default("no_of_groups"),importance:"mandatory",details:"The user defines a set of groups and for each simulation, PROLEAD randomly chooses one group and simulates the design based on the predefined group value. If a group value contains random bits, PROLEAD refreshes all random bits for each simulation.\n\nValue: Number of groups should be greater than 1, and group specification should be a string with Verilog syntax."},this.clockSignalName={value:this.default("clock_signal_name"),importance:"mandatory",details:"The user has to specify the clock signal with the clock_signal_name setting.\n\nValue: String that holds the name of the clock."},this.maxClockCycle={value:this.default("max_clock_cycle"),importance:"mandatory",details:"Specifies the maximum number of clock cycles to simulate before checking the end condition for the first time. If the end condition is not fulfilled, PROLEAD continues the simulation until the end condition is fulfilled.\n\nValue: Number of clock cycles should be an integer and greater than 0."},this.endCondition={value:this.default("end_condition"),importance:"mandatory",details:"Specifies a condition to terminate the simulation. PROLEAD can check if a signal reaches a specific state (e.g. done signal is high). Alternatively, PROLEAD can terminate the simulation after a specific number of clock cycles.\n\nValue: End condition should be a string with Verilog syntax."},this.endWaitCycles={value:this.default("end_wait_cycles"),importance:"mandatory",details:"Specifies the number of clock cycles to wait after the end condition.\n\nValue: Number of wait clock cycles should be an integer and greater or equal to 0."},this.noOfInitialInputs={value:this.default("no_of_initial_inputs"),importance:"mandatory",details:"The user must define a sequence of input signals to initialize the simulation. The no_of_initial_inputs setting specifies the number of primary inputs whose signal values will be defined by the user. Usually, the user must define any input signal except the clock and fresh random signals.\n\nValue: Number of inputs should be an integer and greater than 0."},this.noOfInitialClockCycles={value:this.default("no_of_initial_clock_cycles"),importance:"mandatory",details:"Specifies the number of clock cycles to initiate the simulation with. For each simulation, PROLEAD randomly selects a group and shares the full group value. To assign a share of the group value to a signal it can be assigned with the group_in signal while the following number denotes the share and the range of the group value. For example, group_in0[7:0] denotes the first share of the first eight bits of the group value.\n\nValue: Number of initial clock cycles should be an integer and greater than 0, and signal assignments should be a string with Verilog syntax.\n\nHint: You don't have to repeat the signals in every state if their value doesn't change."},this.noOfAlwaysRandomInputs={value:this.default("no_of_always_random_inputs"),importance:"mandatory",details:"Specifies fresh random input signals, if the design needs fresh randomness, i.e. a certain amount of fresh randomness that changes every clock cycle. The fresh random inputs will be connected to an internal PRNG generating randomness for every simulated clock cycle.\n\nValue: Number of fresh random signals should be an integer and greater or equal to 0, and signal names should be a string with Verilog syntax."},this.noOfOutputs={value:this.default("no_of_outputs"),importance:"mandatory",details:"To check whether the simulation works correctly the user can check the simulated output. For this, the user has to specify the number of primary output shares for the functional verification. If no_of_outputs is greater than zero, the expected_output setting must be defined.\n\nValue: Number of output shares should be an integer and greater or equal to 0 (default 0), and signal names of output shares should be a string with Verilog syntax."},this.expectedOutput={value:this.default("expected_output"),importance:"mandatory",details:"Specifies the expected outputs for the given groups. If the simulation does not return the expected output, PROLEAD will throw an error.\n\nValue: Expected output should be a string with Verilog syntax."},this.waveformSimulation={value:this.default("waveform_simulation"),importance:"mandatory",details:"Specifies whether PROLEAD should store the simulations as .vcd files.\nIt is recommended to reduce the number of simulations when storing them."},this.maxNoOfThreads={value:this.default("max_no_of_threads"),importance:"mandatory",details:"The evaluation with PROLEAD provides a tradeoff between accuracy, runtime, and memory usage. The user must estimate the number of available threads which can be used by PROLEAD. A high number of threads leads to a fast evaluation that consumes more RAM.\n\nValue: Number of threads should be an integer and greater than 0 (default 1)"},this.noOfSimulations={value:this.default("no_of_simulations"),importance:"mandatory",details:"The runtime of PROLEAD always depends on the number of simulations. A high number of simulations increases the accuracy, i.e. enables the detection of smaller effects, while decreasing the runtime.\n\nValue: Total number of simulations should be an integer and greater than 0 and factor of 64."},this.noOfStepSimulations={value:this.default("no_of_step_simulations"),importance:"mandatory",details:"The contingency tables are updated for every trace which allows PROLEAD to compute intermediate results after a certain number of simulations. For each step, PROLEAD generates the required simulations, updates the probing sets, and assesses the leakage. Hence, a smaller step size leads to a slow but memory-efficient evaluation.\n\nValue: Number of step simulations should be an integer and greater than 0 and factor of 64 and a divisor of Number of Simulations."},this.noOfStepWriteResults={value:this.default("no_of_step_write_results"),importance:"mandatory",details:"PROLEAD writes the results after several steps in a report file. The report contains the most leaking probes per cycle and global. The user specifies after how many simulations a report file is written.\n\nValue: Number of write step simulations should be an integer and greater than 0 and factor of 64 and a divisor of Number of Step Simulations."},this.noOfEntriesInReport={value:this.default("no_of_entries_in_report"),importance:"mandatory",details:"The number_of_entries_in_report defines how many of the most leaking probes are written to the report.\n\nValue: Number of entries in report should be an integer and greater than 0 (default 10)."},this.removeFullProbingSets={value:this.default("remove_full_probing_sets"),importance:"mandatory",details:"PROLEAD can consider only probing sets whose evaluation does not satisfy the given effect size. Hence, small probing sets are only evaluated if the required effect size is not achieved. The more simulations are considered the fewer probing sets have to be evaluated.\n\nDecision: yes/no"},this.noOfProbingSetsPerStep={value:this.default("no_of_probing_sets_per_step"),importance:"mandatory",details:"Specifies the number of probing sets per block. It is recommended to use a single block only for small circuits and low security orders due to the high demand for memory.\n\nValue: Maximum number of probing sets per step should be an integer and greater than 0, or set it to 'all' to include all probing sets for each step."}}readFiles(){this.argsPath=this.projectFolder+"/args.set",n.existsSync(this.projectFolder+"/args.set")||(n.writeFileSync(this.projectFolder+"/args.set",""),n.copyFileSync(this.extPath+"/templates/args.set",this.projectFolder+"/args.set")),this.configPath=this.projectFolder+"/config.set",this.configFile.value=this.projectFolder+"/config.set",n.existsSync(this.projectFolder+"/config.set")||(n.writeFileSync(this.projectFolder+"/config.set",""),n.copyFileSync(this.extPath+"/templates/config.set",this.projectFolder+"/config.set"));try{this.readArgs(),this.readConfigs()}catch(e){}if(""===this.resultFolder.value){this.resultFolder.value=this.projectFolder+"/results";try{n.readdirSync(this.resultFolder.value)}catch(e){n.mkdirSync(this.resultFolder.value)}}if(""===this.designFile.value){this.designFile.value=this.projectFolder+"/gate/design.v";try{n.readdirSync(this.projectFolder+"/gate")}catch(e){n.mkdirSync(this.projectFolder+"/gate"),n.writeFileSync(this.designFile.value,""),n.copyFileSync(this.extPath+"/templates/design.v",this.designFile.value),this.moduleName.value="circuit"}}if(""===this.libraryFile.value){this.libraryFile.value=this.projectFolder+"/library.lib";try{n.readFileSync(this.projectFolder+"/library.lib")}catch(e){n.writeFileSync(this.libraryFile.value,""),n.copyFileSync(this.extPath+"/templates/library.lib",this.libraryFile.value),this.libraryName.value="NANG45"}}try{this.update()}catch(e){}}backup(){const e=new Date,t=`${String(e.getDate()).padStart(2,"0")}-${String(e.getMonth()+1).padStart(2,"0")}-${e.getFullYear()}_${String(e.getHours()).padStart(2,"0")}-${String(e.getMinutes()).padStart(2,"0")}-${String(e.getSeconds()).padStart(2,"0")}`;n.existsSync(this.projectFolder+"/backups")||n.mkdirSync(this.projectFolder+"/backups"),n.mkdirSync(this.projectFolder+"/backups/"+t),n.copyFileSync(this.projectFolder+"/args.set",this.projectFolder+"/backups/"+t+"/args.set"),n.copyFileSync(this.projectFolder+"/config.set",this.projectFolder+"/backups/"+t+"/config.set"),n.existsSync(this.designFile.value)?(n.mkdirSync(this.projectFolder+"/backups/"+t+"/gate"),n.copyFileSync(this.designFile.value,this.projectFolder+"/backups/"+t+"/gate/design.v")):n.existsSync(this.projectFolder+"/gate/design.v")&&(n.mkdirSync(this.projectFolder+"/backups/"+t+"/gate"),n.copyFileSync(this.projectFolder+"/gate/design.v",this.projectFolder+"/backups/"+t+"/gate/design.v")),n.existsSync(this.libraryFile.value)?n.copyFileSync(this.libraryFile.value,this.projectFolder+"/backups/"+t+"/library.lib"):n.existsSync(this.projectFolder+"/library.lib")&&n.copyFileSync(this.projectFolder+"/library.lib",this.projectFolder+"/backups/"+t+"/library.lib"),n.existsSync(this.linkerFile.value)?n.copyFileSync(this.linkerFile.value,this.projectFolder+"/backups/"+t+"/linker.ld"):n.existsSync(this.projectFolder+"/linker.ld")&&n.copyFileSync(this.projectFolder+"/linker.ld",this.projectFolder+"/backups/"+t+"/linker.ld")}default(e){switch(e){case"config_file":case"design_file":case"library_file":case"library_name":case"linker_file":case"module_name":case"result_folder":case"clock_signal_name":case"end_condition":return"";case"compact_distributions":case"minimize_probe_sets":case"multivariate_test":case"transitional_leakage":case"waveform_simulation":case"remove_full_probing_sets":return"no";case"effect_size":return.1;case"max_distance_multivariate":case"no_of_entries_in_report":return 10;case"no_of_test_clock_cycles":case"probes_exclude":case"no_of_always_random_inputs":case"no_of_groups":case"no_of_initial_clock_cycles":case"no_of_outputs":return["0"];case"order_of_test":case"max_no_of_threads":return 1;case"probes_include":return["all"];case"end_wait_cycles":case"no_of_initial_inputs":return 0;case"expected_output":return[];case"max_clock_cycle":return 5;case"no_of_probing_sets_per_step":return"all";case"no_of_simulations":return 1e6;case"no_of_step_simulations":case"no_of_step_write_results":return 2e5}}refresh(){this.readArgs(),this.readConfigs()}update(){if(n.writeFileSync(this.argsPath,""),this.isValid(this.configFile.value,"config_file")&&(n.appendFileSync(this.argsPath,"config_file\n"),n.appendFileSync(this.argsPath,this.configFile.value+"\n\n")),this.isValid(this.designFile.value,"design_file")&&(n.appendFileSync(this.argsPath,"design_file\n"),n.appendFileSync(this.argsPath,this.designFile.value+"\n\n")),this.isValid(this.libraryFile.value,"library_file")&&(n.appendFileSync(this.argsPath,"library_file\n"),n.appendFileSync(this.argsPath,this.libraryFile.value+"\n\n")),this.isValid(this.libraryName.value,"library_name",this.libraryFile.value)&&(n.appendFileSync(this.argsPath,"library_name\n"),n.appendFileSync(this.argsPath,this.libraryName.value+"\n\n")),this.isValid(this.linkerFile.value,"linker_file")&&""!==this.linkerFile.value&&(n.appendFileSync(this.argsPath,"linker_file\n"),n.appendFileSync(this.argsPath,this.linkerFile.value+"\n\n")),this.isValid(this.moduleName.value,"module_name",this.designFile.value)&&(n.appendFileSync(this.argsPath,"module_name\n"),n.appendFileSync(this.argsPath,this.moduleName.value+"\n\n")),this.isValid(this.resultFolder.value,"result_folder")&&(n.appendFileSync(this.argsPath,"result_folder\n"),n.appendFileSync(this.argsPath,this.resultFolder.value)),n.writeFileSync(this.configPath,""),this.isValid(this.maxNoOfThreads.value,"max_no_of_threads")&&(n.appendFileSync(this.configPath,"max_no_of_threads\n"),n.appendFileSync(this.configPath,this.maxNoOfThreads.value+"\n\n")),this.isValid(this.noOfGroups.value,"no_of_groups")){this.noOfGroups.value=String(this.noOfGroups.value).split(","),n.appendFileSync(this.configPath,"no_of_groups\n"),n.appendFileSync(this.configPath,this.noOfGroups.value[0]+"\n\n");for(var e=1;e<=Number(this.noOfGroups.value[0]);e++)n.appendFileSync(this.configPath,this.noOfGroups.value[e]+"\n");n.appendFileSync(this.configPath,"\n")}if(this.isValid(this.orderOfTest.value,"order_of_test")&&(n.appendFileSync(this.configPath,"order_of_test\n"),n.appendFileSync(this.configPath,this.orderOfTest.value+"\n\n")),this.isValid(this.clockSignalName.value,"clock_signal_name")&&(n.appendFileSync(this.configPath,"clock_signal_name\n"),n.appendFileSync(this.configPath,this.clockSignalName.value+"\n\n")),this.isValid(this.maxClockCycle.value,"max_clock_cycle")&&(n.appendFileSync(this.configPath,"max_clock_cycle\n"),n.appendFileSync(this.configPath,this.maxClockCycle.value+"\n\n")),this.isValid(this.noOfAlwaysRandomInputs.value,"no_of_always_random_inputs")&&(this.noOfAlwaysRandomInputs.value=String(this.noOfAlwaysRandomInputs.value).split(","),n.appendFileSync(this.configPath,"no_of_always_random_inputs\n"),n.appendFileSync(this.configPath,this.noOfAlwaysRandomInputs.value[0]+"\n\n"),this.noOfAlwaysRandomInputs.value.length>1)){for(e=1;e<Number(this.noOfAlwaysRandomInputs.value.length);e++)n.appendFileSync(this.configPath,this.noOfAlwaysRandomInputs.value[e]+"\n");n.appendFileSync(this.configPath,"\n")}if(this.noOfInitialInputs.value>0&&(n.appendFileSync(this.configPath,"no_of_initial_inputs\n"),n.appendFileSync(this.configPath,this.noOfInitialInputs.value+"\n\n")),this.isValid(this.noOfInitialClockCycles.value,"no_of_initial_clock_cycles",String(this.noOfInitialInputs.value)))if(this.noOfInitialClockCycles.value=String(this.noOfInitialClockCycles.value).split(","),n.appendFileSync(this.configPath,"no_of_initial_clock_cycles\n"),n.appendFileSync(this.configPath,this.noOfInitialClockCycles.value[0]+"\n\n"),this.noOfInitialInputs.value>0)for(var t=Number((this.noOfInitialClockCycles.value.length-1)/this.noOfInitialInputs.value),i=Number(this.noOfInitialInputs.value),a=0;a<t;a++){for(e=0;e<i;e++)n.appendFileSync(this.configPath,this.noOfInitialClockCycles.value[a*i+e+1]+"\n");n.appendFileSync(this.configPath,"\n")}else{for(n.appendFileSync(this.configPath,this.noOfInitialClockCycles.value[1]+"\n"),e=2;e<this.noOfInitialClockCycles.value.length;e++)!isNaN(Number(this.noOfInitialClockCycles.value[e]))||this.noOfInitialClockCycles.value[e].includes("*")?n.appendFileSync(this.configPath,"\n"+this.noOfInitialClockCycles.value[e]+"\n"):n.appendFileSync(this.configPath,this.noOfInitialClockCycles.value[e]+"\n");n.appendFileSync(this.configPath,"\n")}if(this.isValid(this.endCondition.value,"end_condition")&&(n.appendFileSync(this.configPath,"end_condition\n"),n.appendFileSync(this.configPath,this.endCondition.value+"\n\n")),this.isValid(this.endWaitCycles.value,"end_wait_cycles")&&(n.appendFileSync(this.configPath,"end_wait_cycles\n"),n.appendFileSync(this.configPath,this.endWaitCycles.value+"\n\n")),this.isValid(this.probesInclude.value,"probes_include")&&(this.probesInclude.value=String(this.probesInclude.value).split(","),n.appendFileSync(this.configPath,"probes_include\n"),n.appendFileSync(this.configPath,this.probesInclude.value[0]+"\n\n"),this.probesInclude.value.length>1)){for(e=1;e<Number(this.probesInclude.value.length);e++)n.appendFileSync(this.configPath,this.probesInclude.value[e]+"\n");n.appendFileSync(this.configPath,"\n")}if(this.isValid(this.probesExclude.value,"probes_exclude")&&(this.probesExclude.value=String(this.probesExclude.value).split(","),n.appendFileSync(this.configPath,"probes_exclude\n"),n.appendFileSync(this.configPath,this.probesExclude.value[0]+"\n\n"),this.probesExclude.value.length>1)){for(e=1;e<Number(this.probesExclude.value.length);e++)n.appendFileSync(this.configPath,this.probesExclude.value[e]+"\n");n.appendFileSync(this.configPath,"\n")}if(this.isValid(this.multivariateTest.value,"multivariate_test")&&(n.appendFileSync(this.configPath,"multivariate_test\n"),n.appendFileSync(this.configPath,this.multivariateTest.value+"\n\n")),this.isValid(this.transitionalLeakage.value,"transitional_leakage")&&(n.appendFileSync(this.configPath,"transitional_leakage\n"),n.appendFileSync(this.configPath,this.transitionalLeakage.value+"\n\n")),this.isValid(this.noOfTestClockCycles.value,"no_of_test_clock_cycles")&&(this.noOfTestClockCycles.value=String(this.noOfTestClockCycles.value).split(","),n.appendFileSync(this.configPath,"no_of_test_clock_cycles\n"),n.appendFileSync(this.configPath,this.noOfTestClockCycles.value[0]+"\n\n"),Number(this.noOfTestClockCycles.value[0])>0)){for(e=1;e<=Number(this.noOfTestClockCycles.value[0]);e++)n.appendFileSync(this.configPath,this.noOfTestClockCycles.value[e]+"\n");n.appendFileSync(this.configPath,"\n")}if(this.isValid(this.noOfSimulations.value,"no_of_simulations")&&(n.appendFileSync(this.configPath,"no_of_simulations\n"),n.appendFileSync(this.configPath,this.noOfSimulations.value+"\n\n")),this.isValid(this.noOfStepSimulations.value,"no_of_step_simulations",String(this.noOfSimulations.value))&&(n.appendFileSync(this.configPath,"no_of_step_simulations\n"),n.appendFileSync(this.configPath,this.noOfStepSimulations.value+"\n\n")),this.isValid(this.noOfStepWriteResults.value,"no_of_step_write_results",String(this.noOfSimulations.value+","+this.noOfStepSimulations.value))&&(n.appendFileSync(this.configPath,"no_of_step_write_results\n"),n.appendFileSync(this.configPath,this.noOfStepWriteResults.value+"\n\n")),this.isValid(this.compactDistributions.value,"compact_distributions")&&(n.appendFileSync(this.configPath,"compact_distributions\n"),n.appendFileSync(this.configPath,this.compactDistributions.value+"\n\n")),this.isValid(this.minimizeProbeSets.value,"minimize_probe_sets")&&(n.appendFileSync(this.configPath,"minimize_probe_sets\n"),n.appendFileSync(this.configPath,this.minimizeProbeSets.value+"\n\n")),this.isValid(this.removeFullProbingSets.value,"remove_full_probing_sets")&&(n.appendFileSync(this.configPath,"remove_full_probing_sets\n"),n.appendFileSync(this.configPath,this.removeFullProbingSets.value+"\n\n")),this.isValid(this.noOfEntriesInReport.value,"no_of_entries_in_report")&&(n.appendFileSync(this.configPath,"no_of_entries_in_report\n"),n.appendFileSync(this.configPath,this.noOfEntriesInReport.value+"\n\n")),this.isValid(this.maxDistanceMultivariate.value,"max_distance_multivariate")&&(n.appendFileSync(this.configPath,"max_distance_multivariate\n"),n.appendFileSync(this.configPath,this.maxDistanceMultivariate.value+"\n\n")),this.isValid(this.noOfProbingSetsPerStep.value,"no_of_probing_sets_per_step")&&"all"!==this.noOfProbingSetsPerStep.value&&(n.appendFileSync(this.configPath,"no_of_probing_sets_per_step\n"),n.appendFileSync(this.configPath,this.noOfProbingSetsPerStep.value+"\n\n")),this.isValid(this.effectSize.value,"effect_size")&&(n.appendFileSync(this.configPath,"effect_size\n"),n.appendFileSync(this.configPath,this.effectSize.value+"\n\n")),this.isValid(this.noOfOutputs.value,"no_of_outputs")&&""!==this.noOfOutputs.value[0]&&(this.noOfOutputs.value=String(this.noOfOutputs.value).split(","),n.appendFileSync(this.configPath,"no_of_outputs\n"),n.appendFileSync(this.configPath,this.noOfOutputs.value[0]+"\n\n"),this.noOfOutputs.value.length>1)){for(e=1;e<Number(this.noOfOutputs.value.length);e++)n.appendFileSync(this.configPath,this.noOfOutputs.value[e]+"\n");n.appendFileSync(this.configPath,"\n")}if(this.isValid(this.expectedOutput.value,"expected_output",this.noOfGroups.value[0])&&""!==this.expectedOutput.value[0]&&void 0!==this.expectedOutput.value[0]){for(this.expectedOutput.value=String(this.expectedOutput.value).split(/,/),n.appendFileSync(this.configPath,"expected_output\n"),e=0;e<Number(this.noOfGroups.value[0]);e++)n.appendFileSync(this.configPath,this.expectedOutput.value[e]+"\n");n.appendFileSync(this.configPath,"\n")}this.isValid(this.waveformSimulation.value,"waveform_simulation")&&(n.appendFileSync(this.configPath,"waveform_simulation\n"),n.appendFileSync(this.configPath,this.waveformSimulation.value+"\n\n"));for(var s=n.readFileSync(this.configPath,{encoding:"utf-8"}).split("\n"),o=s.length-1;o>=0&&""===s[o];o--)s.pop();n.writeFileSync(this.configPath,"");for(var l=0;l<s.length-1;l++)n.appendFileSync(this.configPath,s[l]+"\n");n.appendFileSync(this.configPath,s[s.length-1])}notIN(e,t){for(var i=0;i<t.length;i++)if(e===t[i])return!1;return!0}error(e){a.window.showErrorMessage(`PROLEAD: "${e}" has an invalid value! Default value will be set, but please check the configuration page!`)}readNsplit(e){let t=n.readFileSync(e,"utf-8").split(/\r?\n/);for(var i=0;i<t.length;i++)t[i].includes("%")?t[i]=t[i].substring(0,t[i].indexOf("%")).trimEnd():t[i]=t[i].trim();return t=t.filter((function(e){return e})),t}noComments(e){return e.includes("%")?e.substring(0,e.indexOf("%")).trim():e.trim()}readBoolean(e,t){return this.notIN(t,this.allARGS)&&this.notIN(t,this.allCONFIGS)?"yes"===t||"no"===t||"exclusive"===t?t:(this.error(e),this.default(e)):this.default(e)}readNumber(e,t,i){return this.notIN(t,this.allARGS)&&this.notIN(t,this.allCONFIGS)?"int"!==i||isNaN(parseInt(t,10))?"float"!==i||isNaN(parseFloat(t))?(this.error(e),this.default(e)):parseFloat(t):parseInt(t,10):this.default(e)}readName(e,t){if(this.notIN(t,this.allARGS)&&this.notIN(t,this.allCONFIGS)){try{return n.readFileSync(t),this.error(e),this.default(e)}catch(e){}try{return n.readdirSync(t),this.error(e),this.default(e)}catch(e){}return t}return this.default(e)}readFile(e,t){if(!this.notIN(t,this.allARGS)||!this.notIN(t,this.allCONFIGS))return this.default(e);try{return n.readFileSync(t),t}catch(t){return this.error(e),this.default(e)}}readDir(e,t){if(!this.notIN(t,this.allARGS)||!this.notIN(t,this.allCONFIGS))return this.default(e);try{return n.readdirSync(t),t}catch(t){return this.error(e),this.default(e)}}readRanges(e,t,i){let a=t[i],n=[];if("no_of_always_random_inputs"===e||"no_of_groups"===e||"no_of_outputs"===e||"no_of_test_clock_cycles"===e)if(!isNaN(parseInt(a,10))&&parseInt(a,10)>0){n[0]=a;for(var s=1;s<=parseInt(a);s++)n[s]=t[i+s]}else{if(isNaN(parseInt(a,10))||0!==parseInt(a,10))return this.error(e),this.default(e);n[0]=a}else if("expected_output"===e){const e=t.indexOf("no_of_groups"),a=Number(t[e+1]);for(s=0;s<a;s++)n[s]=t[i+s]}else if("no_of_initial_clock_cycles"===e)if(!isNaN(parseInt(a,10))&&parseInt(a,10)>0){n[0]=a,s=1;for(var o=!1;this.notIN(t[i+s],this.allCONFIGS);)""!==t[i+s]&&(n[s]=t[i+s]),t[i+s].includes("1'b")&&!o&&(o=!0),s++}else{if(isNaN(parseInt(a,10))||0!==parseInt(a,10))return this.error(e),this.default(e);n[0]=a}else if("probes_exclude"===e||"probes_include"===e)if(isNaN(parseInt(a,10))&&"all"===a)n[0]=a;else{if(isNaN(parseInt(a,10))||!(parseInt(a)>=0))return this.error(e),this.default(e);for(n[0]=a,s=1;s<=parseInt(a);s++)n[s]=t[i+s]}return n}readArgs(){if(""===this.argsPath)return void a.window.showErrorMessage("PROLEAD: No path to args.set was specified. Please open a new project or specify the path!");let e=this.readNsplit(this.argsPath);for(var t=0;t<e.length-1;t++){const i=this.noComments(e[t]);switch(i){case"config_file":n.existsSync(this.configPath)?this.configFile.value=this.configPath:(this.configFile.value=this.readFile(i,e[t+1]),this.configPath=this.configFile.value);break;case"design_file":this.designFile.value=this.readFile(i,e[t+1]);break;case"library_file":this.libraryFile.value=this.readFile(i,e[t+1]);break;case"library_name":this.libraryName.value=this.readName(i,e[t+1]);break;case"linker_file":this.linkerFile.value=this.readFile(i,e[t+1]);break;case"module_name":this.moduleName.value=this.readName(i,e[t+1]);break;case"result_folder":this.resultFolder.value=this.readDir(i,e[t+1])}}}readConfigs(){if(""===this.configPath)return void a.window.showErrorMessage("PROLEAD: No path to config.set was specified. Please open a new project or specify the path!");let e=this.readNsplit(this.configPath);for(var t=0;t<e.length-1;t++){const i=this.noComments(e[t]);switch(i){case"compact_distributions":this.compactDistributions.value=this.readBoolean(i,e[t+1]);break;case"effect_size":this.effectSize.value=this.readNumber(i,e[t+1],"float");break;case"max_distance_multivariate":this.maxDistanceMultivariate.value=this.readNumber(i,e[t+1],"int");break;case"minimize_probe_sets":this.minimizeProbeSets.value=this.readBoolean(i,e[t+1]);break;case"multivariate_test":this.multivariateTest.value=this.readBoolean(i,e[t+1]);break;case"no_of_test_clock_cycles":this.noOfTestClockCycles.value=this.readRanges(i,e,t+1);break;case"order_of_test":this.orderOfTest.value=this.readNumber(i,e[t+1],"int");break;case"probes_exclude":this.probesExclude.value=this.readRanges(i,e,t+1);break;case"probes_include":this.probesInclude.value=this.readRanges(i,e,t+1);break;case"transitional_leakage":this.transitionalLeakage.value=this.readBoolean(i,e[t+1]);break;case"clock_signal_name":this.clockSignalName.value=this.readName(i,e[t+1]);break;case"end_condition":this.endCondition.value=this.readName(i,e[t+1]);break;case"end_wait_cycles":this.endWaitCycles.value=this.readNumber(i,e[t+1],"int");break;case"expected_output":this.expectedOutput.value=this.readRanges(i,e,t+1);break;case"max_clock_cycle":this.maxClockCycle.value=this.readNumber(i,e[t+1],"int");break;case"no_of_always_random_inputs":this.noOfAlwaysRandomInputs.value=this.readRanges(i,e,t+1);break;case"no_of_groups":this.noOfGroups.value=this.readRanges(i,e,t+1);break;case"no_of_initial_clock_cycles":this.noOfInitialClockCycles.value=this.readRanges(i,e,t+1);break;case"no_of_initial_inputs":this.noOfInitialInputs.value=this.readNumber(i,e[t+1],"int");break;case"no_of_outputs":this.noOfOutputs.value=this.readRanges(i,e,t+1);break;case"waveform_simulation":this.waveformSimulation.value=this.readBoolean(i,e[t+1]);break;case"max_no_of_threads":this.maxNoOfThreads.value=this.readNumber(i,e[t+1],"int");break;case"no_of_entries_in_report":this.noOfEntriesInReport.value=this.readNumber(i,e[t+1],"int");break;case"no_of_probing_sets_per_step":this.noOfProbingSetsPerStep.value=this.readName(i,e[t+1]);break;case"no_of_simulations":this.noOfSimulations.value=this.readNumber(i,e[t+1],"int");break;case"no_of_step_simulations":this.noOfStepSimulations.value=this.readNumber(i,e[t+1],"int");break;case"no_of_step_write_results":this.noOfStepWriteResults.value=this.readNumber(i,e[t+1],"int");break;case"remove_full_probing_sets":this.removeFullProbingSets.value=this.readBoolean(i,e[t+1])}}}isValid(e,t,i){var s=!1;function o(e,t,i){a.window.showErrorMessage(`PROLEAD: ${e} "${t}" was not found in the "${i}"`)}switch(t){case"config_file":n.existsSync(e)&&e.includes(".set")?s=!0:a.window.showErrorMessage(`PROLEAD: No Config File at path "${e}" was found! Please check configuration page`);break;case"design_file":n.existsSync(e)&&e.includes(".v")?s=!0:a.window.showErrorMessage(`PROLEAD: No Design File at path "${e}" was found! Please check configuration page`);break;case"library_file":n.existsSync(e)&&e.includes(".lib")?s=!0:a.window.showErrorMessage(`PROLEAD: No Library File at path "${e}" was found! Please check configuration page`);break;case"library_name":if(""===e.trim()){a.window.showErrorMessage("PROLEAD: Please specify a Library Name! Please check configuration page");break}if(n.existsSync(i)&&i.includes(".lib")){for(var l=this.readNsplit(i),r=0;r<l.length;r++)if(l[r].includes("Library")&&l[r+1].includes(e)){s=!0;break}if(!1===s){o("Library Name",e,"Library File");break}}else a.window.showErrorMessage(`PROLEAD: No library named "${e}" was found because Library File is invalid! Please check configuration page`);break;case"module_name":if(""===e.trim()){a.window.showErrorMessage("PROLEAD: Please specify a module Name! Please check configuration page");break}if(n.existsSync(i)&&i.includes(".v")){for(l=this.readNsplit(i),r=0;r<l.length;r++)if(l[r].includes("module")&&l[r].includes(e)){s=!0;break}if(!1===s){o("Module Name",e,"Design File");break}}else a.window.showErrorMessage(`PROLEAD: No module named "${e}" was found because Design File is invalid! Please check configuration page`);break;case"result_folder":!function(e){try{return n.readdirSync(e),!0}catch(e){return console.log(e),!1}}(e)?a.window.showErrorMessage(`PROLEAD: Result Folder has an invalid path "${e}"! Please check configuration page`):s=!0;break;case"compact_distributions":case"minimize_probe_sets":case"transitional_leakage":case"clock_signal_name":case"end_condition":case"waveform_simulation":case"remove_full_probing_sets":s=!0;break;case"effect_size":!isNaN(parseFloat(e))&&parseFloat(e)>0?s=!0:a.window.showErrorMessage("PROLEAD: Effect Size should be a float number and greater than 0! Please check configuration page");break;case"max_distance_multivariate":!isNaN(parseInt(e,10))&&parseInt(e,10)>=0?s=!0:a.window.showErrorMessage("PROLEAD: Max Distance Multivariate should be a positive integer or 0! Please check configuration page");break;case"multivariate_test":"yes"!==e&&"no"!==e&&"exclusive"!==e||(s=!0);break;case"no_of_test_clock_cycles":try{if((c=parseInt(e[0],10))!==e.length-1){s=!1,a.window.showErrorMessage(`PROLEAD: ${e.length-1} Test Clock Cycle ranges are specified, whereas the specified number of ranges is ${c}! Please check configuration page`);break}for(r=1;r<=c;r++){if(isNaN(e[r].replace(/-/g,""))){s=!1,a.window.showErrorMessage(`PROLEAD: Test Clock Cycle "${e[r]}" has a syntax error! Please check configuration page`);break}s=!0}}catch(e){s=!1,a.window.showErrorMessage("PROLEAD: Number Of Test Clock Cycles has an invalid value! Please check configuration page")}break;case"order_of_test":!isNaN(parseInt(e,10))&&parseInt(e,10)>0?s=!0:a.window.showErrorMessage("PROLEAD: Order Of Test should be a positive integer and greater than 0! Please check configuration page");break;case"probes_exclude":try{if("all"===e[0]||"0"===e[0]){s=!0;break}if((c=parseInt(e[0],10))!==e.length-1){a.window.showErrorMessage(`PROLEAD: ${e.length-1} Excluded Probes are specified, whereas the specified number of probes is ${c}! Please check configuration page`);break}for(r=1;r<=c;r++){if(""===e[r]){s=!1,a.window.showErrorMessage(`PROLEAD: Excluded Probe ${r} is empty! Please check configuration page`);break}s=!0}}catch(t){s=!1,a.window.showErrorMessage(`PROLEAD: Excluded Probes has an invalid value "${e}"! Please check configuration page`)}break;case"probes_include":try{if("all"===e[0]||"0"===e[0]){s=!0;break}if((c=parseInt(e[0],10))!==e.length-1){a.window.showErrorMessage(`PROLEAD: ${e.length-1} Included Probes are specified, whereas the specified number of probes is ${c}! Please check configuration page`);break}for(r=1;r<=c;r++){if(""===e[r]){s=!1,a.window.showErrorMessage(`PROLEAD: Included Probe ${r} is empty! Please check configuration page`);break}s=!0}}catch(t){s=!1,a.window.showErrorMessage(`PROLEAD: Included Probes has an invalid value "${e}"! Please check configuration page`)}break;case"end_wait_cycles":!isNaN(parseInt(e,10))&&parseInt(e,10)>=0?s=!0:a.window.showErrorMessage("PROLEAD: End Wait Cycles should be a positive integer or 0! Please check configuration page");break;case"expected_output":try{var c=parseInt(i[0],10);if(void 0===e[0]||""===e[0]){s=!0;break}if(c!==e.length){c>1?a.window.showErrorMessage(`PROLEAD: ${e.length} Expected Outputs are specified, whereas the specified Number Of Groups is ${c}. They should be equal! Please check configuration page`):a.window.showErrorMessage("PROLEAD: The number of Expected Outputs should be equal to the Number Of Groups and both greater than 1! Please check configuration page");break}for(r=0;r<c;r++){if(""===e[r]){s=!1,a.window.showErrorMessage(`PROLEAD: Expected Output ${r} is empty! Please check configuration page`);break}s=!0}}catch(t){s=!1,a.window.showErrorMessage(`PROLEAD: Expected Output has an invalid value "${e}"! Please check configuration page`)}break;case"max_clock_cycle":!isNaN(parseInt(e,10))&&parseInt(e,10)>0?s=!0:a.window.showErrorMessage("PROLEAD: Max Clock Cycle should be a positive integer and greater than 0! Please check configuration page");break;case"no_of_always_random_inputs":if("0"===e[0])s=!0;else try{if((c=parseInt(e[0],10))!==e.length-1){a.window.showErrorMessage(`PROLEAD: ${e.length-1} Always Random Inputs are specified, whereas the specified number of always random inputs is ${c}! Please check configuration page`);break}for(r=1;r<=c;r++){if(""===e[r]){s=!1,a.window.showErrorMessage(`PROLEAD: Always Random Input ${r} is empty! Please check configuration page`);break}s=!0}}catch(e){s=!1,a.window.showErrorMessage("PROLEAD: Number Of Always Random Inputs has an invalid value! Please check configuration page")}break;case"no_of_groups":try{if((c=parseInt(e[0],10))!==e.length-1){a.window.showErrorMessage(`PROLEAD: ${e.length-1} groups are specified, whereas the specified Number Of Groups is ${c}! Please check configuration page`);break}for(r=1;r<=c;r++){if(""===e[r]){s=!1,a.window.showErrorMessage(`PROLEAD: Group ${r} is empty! Please check configuration page`);break}s=!0}}catch(e){s=!1,a.window.showErrorMessage("PROLEAD: Number Of Groups has an invalid value! Please check configuration page")}break;case"no_of_initial_clock_cycles":try{var d=parseInt(e[0],10),h=0;if(!isNaN(parseInt(i,10))&&parseInt(i,10)>0){h=parseInt(i);for(var u=0;u<d;u++)for(r=1;r<h;r++){if(""===e[u*h+r]){s=!1,a.window.showErrorMessage(`PROLEAD: Signal ${r} at Initial Clock Cycle ${u} is empty! Please check configuration page`),r=h,u=d;break}s=!0}}else{var p=1;for(u=0;u<d;u++){for(e[p].includes("*")?(h=parseInt(e[p].substring(e[p].indexOf("*")+1),10),d=d-parseInt(e[p].substring(0,e[p].indexOf("*")),10)+1):h=parseInt(e[p],10),r=1;r<=h;r++){if(""===e[p+r]){s=!1,a.window.showErrorMessage(`PROLEAD: Signal ${r} at Initial Clock Cycle ${u} is empty! Please check configuration page`),r=h,u=d;break}s=!0}p=p+h+1}}}catch(e){s=!1,a.window.showErrorMessage("PROLEAD: Number Of Initial Clock Cycles has an invalid value! Please check configuration page")}break;case"no_of_initial_inputs":!isNaN(parseInt(e,10))&&parseInt(e,10)>0?s=!0:isNaN(parseInt(e,10))||0!==parseInt(e,10)?a.window.showErrorMessage("PROLEAD: Number Of Initial Inputs should be a positive integer and greater than 0! Please check configuration page"):s=!1;break;case"no_of_outputs":if("0"===e[0]||""===e[0])s=!0;else try{if((c=parseInt(e[0],10))!==e.length-1){s=!1,a.window.showErrorMessage(`PROLEAD: ${e.length-1} Outputs are specified, whereas the specified Number Of Outputs is ${c}! Please check configuration page`);break}for(r=1;r<=c;r++){if(""===e[r]){s=!1,a.window.showErrorMessage(`PROLEAD: Output ${r} is empty! Please check configuration page`);break}s=!0}}catch(e){s=!1,a.window.showErrorMessage("PROLEAD: Number Of Outputs has an invalid value! Please check configuration page")}break;case"max_no_of_threads":!isNaN(parseInt(e,10))&&parseInt(e,10)>0?s=!0:a.window.showErrorMessage(`PROLEAD: Max Number Of Threads "${e}" should be a positive integer and greater than 0! Please check configuration page`);break;case"no_of_entries_in_report":!isNaN(parseInt(e,10))&&parseInt(e,10)>0?s=!0:a.window.showErrorMessage(`PROLEAD: Number Of Entries In Report "${e}" should be a positive integer and greater than 0! Please check configuration page`);break;case"no_of_probing_sets_per_step":"all"===String(e).replace(/\s/g,"")||!isNaN(parseInt(e,10))&&parseInt(e,10)>0?s=!0:a.window.showErrorMessage(`PROLEAD: Number Of Probing Sets Per Step "${e}" should be "all" or a positive integer greater than 0! Please check configuration page`);break;case"no_of_simulations":!isNaN(parseInt(e,10))&&parseInt(e,10)>0&&parseInt(e,10)%64==0?s=!0:a.window.showErrorMessage(`PROLEAD: Number Of Simulations "${e}" should be greater than 0 and a factor of 64! Please check configuration page`);break;case"no_of_step_simulations":!isNaN(parseInt(e,10))&&parseInt(e,10)>0&&parseInt(e,10)%64==0&&parseInt(i,10)%parseInt(e,10)==0?s=!0:a.window.showErrorMessage(`PROLEAD: Number Of Step Simulations "${e}" should be greater than 0 and a factor of 64 and a divisor of Number of Simulations "${i}"! Please check configuration page`);break;case"no_of_step_write_results":const t=i.split(",")[0],g=i.split(",")[1];!isNaN(parseInt(e,10))&&parseInt(e,10)>0&&parseInt(t,10)%parseInt(e,10)==0&&parseInt(e,10)%parseInt(g,10)==0?s=!0:a.window.showErrorMessage(`PROLEAD: Number Of Step Write Results "${e}" should be greater than 0 and a factor of 64 and of Number of Step Simulations "${g}" as well as a divisor of Number of Simulations "${t}"! Please check configuration page`)}return s}}},750:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EvaluationProvider=void 0;const a=i(496),n=i(147);t.EvaluationProvider=class{constructor(e,t){this.myConfig=e,this.myNotifier=t}constructCommand(){const e=new Date,t=`${String(e.getDate()).padStart(2,"0")}-${String(e.getMonth()+1).padStart(2,"0")}-${e.getFullYear()}_${String(e.getHours()).padStart(2,"0")}-${String(e.getMinutes()).padStart(2,"0")}-${String(e.getSeconds()).padStart(2,"0")}`;var i="./release/PROLEAD ";return""!==this.myConfig.libraryFile.value&&(i+=`-lf "${this.myConfig.libraryFile.value}" `),""!==this.myConfig.libraryName.value&&(i+=`-ln "${this.myConfig.libraryName.value}" `),""!==this.myConfig.designFile.value&&(i+=`-df "${this.myConfig.designFile.value}" `),""!==this.myConfig.moduleName.value&&(i+=`-mn "${this.myConfig.moduleName.value}" `),""!==this.myConfig.configFile.value&&(i+=`-cf "${this.myConfig.configFile.value}" `),""!==this.myConfig.linkerFile.value&&(i+=`-ldf "${this.myConfig.linkerFile.value}" `),""!==this.myConfig.resultFolder.value&&(n.mkdirSync(this.myConfig.resultFolder.value+"/"+t),i+=`-rf "${this.myConfig.resultFolder.value}/${t}" `),i.trimEnd()}getTerminal(){return void 0===a.window.activeTerminal?a.window.createTerminal("Prolead"):a.window.activeTerminal}analyzeOutput(e){const t=n.readFileSync(e,"utf-8").split(/\r?\n/);for(let e=t.length-1;e>0;e--){if(0===t[e].indexOf("done!")&&t[e-1].includes("Evaluation done")){this.myNotifier.set("evaluation finished $(pass)"),this.myNotifier.blink();let e=0,i=this.myConfig.noOfSimulations.value/this.myConfig.noOfStepSimulations.value;for(;!t[e].includes("Evaluate security under the robust probing model!");)e++;for(;!t[e].includes("|");)e++;e+=2;for(let n=0;n<i;n++)if(t[e+2*n].includes("LEAKAGE"))return a.window.showErrorMessage("PROLAED",{modal:!0,detail:`A leakage was discovered in the ${n+1}. step!`}),-1;return a.window.showInformationMessage("PROLEAD",{modal:!0,detail:"No leakage was detected!"}),1}t[e].includes("Evaluate security under the robust probing model!")&&this.myNotifier.set("evaluating $(sync~spin)")}setTimeout((()=>{this.analyzeOutput(e)}),100)}evaluate(){const e=this.constructCommand(),t=this.getTerminal(),i=String(a.workspace.getConfiguration("prolead").get("runTime.codeFolder"));n.writeFileSync(i+"/PROLEAD/Report.dat",""),t.show(!0),t.sendText("cd "+i+"/PROLEAD"),t.sendText(e+" 2>&1 | tee Report.dat"),this.myNotifier.set("starting evaluation $(gear~spin)"),this.analyzeOutput(i+"/PROLEAD/Report.dat")}}},49:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.InstallationProvider=void 0;const a=i(496),n=i(147);t.InstallationProvider=class{constructor(e){this.pw=void 0,this.myTerminal=a.window.activeTerminal,this.pathRepo=e+"/logs/repository.log",n.existsSync(this.pathRepo)||n.writeFileSync(this.pathRepo,""),this.pathGit=e+"/logs/git.log",n.existsSync(this.pathGit)||n.writeFileSync(this.pathGit,""),this.pathGpp=e+"/logs/gpp.log",n.existsSync(this.pathGpp)||n.writeFileSync(this.pathGpp,""),this.pathMake=e+"/logs/make.log",n.existsSync(this.pathMake)||n.writeFileSync(this.pathMake,""),this.pathBoost=e+"/logs/libboost.log",n.existsSync(this.pathBoost)||n.writeFileSync(this.pathBoost,""),this.pathCode=e+"/logs/clone.log",n.existsSync(this.pathCode)||n.writeFileSync(this.pathCode,"")}async getPassword(){const e=await a.window.showInputBox({placeHolder:"$tr0n9_P@$$vv0r6",title:"Enter the root password to install the requirements",ignoreFocusOut:!0,password:!0});return this.pw=e,new Promise(((t,i)=>{void 0===e?i():t()}))}installDeps(){void 0!==a.window.activeTerminal?this.myTerminal=a.window.activeTerminal:this.myTerminal=a.window.createTerminal("PROLEAD"),void 0!==this.pw&&(this.myTerminal.show(),this.myTerminal.sendText("sudo apt-get install git make g++ libboost-all-dev"),setTimeout((()=>{this.myTerminal.sendText(this.pw)}),500))}checkOutput(e,t,i,a,s,o){if(0===o)return s(),-1;let l=[];try{l=n.readFileSync(e,"utf-8").split(/\r?\n/g)}catch(e){return!1}for(let e=l.length-1;e>=0;e--){if(l[e].includes(t))return a(),1;if(l[e].includes(i))return a(),0}o--,setTimeout((()=>{this.checkOutput(e,t,i,a,s,o)}),1e3)}async connectRepo(){return new Promise(((e,t)=>{this.checkOutput(this.pathRepo,"successfully","is already enabled",e,t,20)}))}async installPackageGit(){return new Promise(((e,t)=>{setTimeout(e,1e3)}))}async installPackageGpp(){return new Promise(((e,t)=>{setTimeout(e,1e3)}))}async installPackageMake(){return new Promise(((e,t)=>{setTimeout(e,1e3)}))}async installPackageLibboost(){return new Promise(((e,t)=>{setTimeout(e,1e3)}))}async cloneSourceCode(){return new Promise(((e,t)=>{setTimeout(e,1e3)}))}async buildSourceCode(){return new Promise(((e,t)=>{setTimeout(e,1e3)}))}}},582:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LibraryProvider=void 0;const a=i(496),n=i(561);class s{static handleMessage(e,t,i){switch(e.command){case"getLibCells":var o=0;for(let t=0;t<this.arrLibs.length;t++)this.arrLibs[t].name===e.lib&&(o=t);i.webview.postMessage({type:"add_configgroup",note:e.lib});for(let e=0;e<this.arrLibs[o].cells.length;e++)i.webview.postMessage({type:"add_cells",lib:this.arrLibs[o].name,name:this.arrLibs[o].cells[e].name,nr:e,label:e+1,inputs:this.arrLibs[o].cells[e].inputs,outputs:this.arrLibs[o].cells[e].outputs,variants:this.arrLibs[o].cells[e].variants,formula:this.arrLibs[o].cells[e].formula});break;case"exit_editing_newlib":s.exitLibraryNewlib(i,e.shown);break;case"exit_library_editing":s.exitLibraryEditing(i,e.shown);break;case"already_adding":a.window.showInformationMessage("PROLEAD: You are already adding a new library!");break;case"already_editing":a.window.showInformationMessage(`PROLEAD: You are already editing the library "${e.lib}"!`);break;case"deleteCell":s.deleteCell(i,t,e.name,e.id);break;case"deleteLib":s.deleteLib(i,t,e.id,e.shown);break;case"createNewLib":var l=t.libraryFile.value;if(n.existsSync(l))if(-1!==n.readFileSync(l,"utf-8").indexOf(e.name))a.window.showErrorMessage(`PROLEAD: The library name "${e.name}" exists already`);else{const t=n.readFileSync(l,"utf-8").split(/\r?\n/);let a={name:e.name,cells:[],strt:t.length-1,last:t.length+2};this.arrLibs.push(a),n.appendFileSync(l,"Library\n"),n.appendFileSync(l,e.name+"\n\n"),i.webview.postMessage({type:"createNewLib",name:e.name})}else a.window.showErrorMessage(`PROLEAD: Library edits can not be saved because the path to the library file is invalid (${l})`);break;case"addLibNewcells":o=0;for(let t=0;t<this.arrLibs.length;t++)this.arrLibs[t].name===e.lib&&(o=t);this.arrLibs[o].cells.push({name:"Gate",variants:[],inputs:[],outputs:[],formula:[]}),i.webview.postMessage({type:"add_cells",lib:e.lib,name:"Gate",nr:e.nr,label:this.arrLibs[o].cells.length,inputs:"",outputs:"",variants:"",formula:""});break;case"addNewCells":if(l=t.libraryFile.value,n.existsSync(l)){o=0;var r={name:"",variants:[],inputs:[],outputs:[],formula:[]};for(let t=0;t<this.arrLibs.length;t++)this.arrLibs[t].name===e.lib&&(o=t);r.name=e.name,this.arrLibs[o].last++,n.appendFileSync(l,`${e.name}\n`);const t=String(e.variants).split(",");n.appendFileSync(l,`${t.length}`);for(let e=0;e<t.length;e++)r.variants[e]=t[e],n.appendFileSync(l,` ${t[e]}`);this.arrLibs[o].last++,n.appendFileSync(l,"\n");const i=String(e.inputs).split(",");n.appendFileSync(l,`${i.length}`);for(let e=0;e<i.length;e++)r.inputs[e]=i[e],n.appendFileSync(l,` ${i[e]}`);this.arrLibs[o].last++,n.appendFileSync(l,"\n");const a=String(e.outputs).split(",");n.appendFileSync(l,`${a.length}`);for(let e=0;e<a.length;e++)r.outputs[e]=a[e],n.appendFileSync(l,` ${a[e]}`);this.arrLibs[o].last++,n.appendFileSync(l,"\n");const s=String(e.formula).split(",");for(let e=0;e<s.length;e++)r.formula[e]=s[e],this.arrLibs[o].last++,n.appendFileSync(l,`${s[e]}\n`);this.arrLibs[o].last++,n.appendFileSync(l,"\n"),this.arrLibs[o].cells.push(r)}else a.window.showErrorMessage(`PROLEAD: Library edits can not be saved because the path to the library file is invalid (${l})`);break;case"finishNewLib":l=t.libraryFile.value,n.existsSync(l)?(n.appendFileSync(l,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n"),a.window.showInformationMessage(`PROLEAD: New library "${e.name}" is successfully created!`),i.webview.postMessage({type:"addNewlibToSelect",name:e.name})):a.window.showErrorMessage(`PROLEAD: Library edits can not be saved because the path to the library file is invalid (${l})`);break;case"notEnoughNewCells":a.window.showErrorMessage("PROLEAD: Please add at least 1 cell to create a new library!");break;case"newlibInvalid":a.window.showErrorMessage("PROLEAD: New Library Name is empty or invalid!");break;case"invalidValue":switch(e.error){case-1:a.window.showErrorMessage(`PROLEAD: "${e.value}" is invalid! Name must start with a letter.`);break;case-2:a.window.showErrorMessage(`PROLEAD: "${e.value}" is invalid! Name can not contain empty space.`);break;case-3:a.window.showErrorMessage(`PROLEAD: "${e.value}" is invalid! Name can not contain symbols.`);break;case-4:a.window.showErrorMessage(`PROLEAD: "${e.value}" is invalid! Name can not be an operator.`);break;case-11:1===e.value?a.window.showErrorMessage("PROLEAD: A bracket is opened but not closed."):a.window.showErrorMessage(`PROLEAD: ${e.value} brackets are opened but not closed.`);break;case-12:1===e.value?a.window.showErrorMessage("PROLEAD: A bracket is closed but not opened."):a.window.showErrorMessage(`PROLEAD: ${e.value} brackets are closed but not opened.`);break;case-13:a.window.showErrorMessage(`PROLEAD: "${e.value}" is neither an input nor an output.`);break;case-14:1===e.value.length?a.window.showErrorMessage(`PROLEAD: "${String(e.value)}" is an invalid value for formulas.`):a.window.showErrorMessage(`PROLEAD: "${String(e.value)}" are invalid values for formulas.`);break;case-15:a.window.showErrorMessage(`PROLEAD: "${e.value}" is repeated twice or more in row.`);break;case-16:a.window.showErrorMessage(`PROLEAD: Formula can not end with "${e.value}".`)}break;case"saveLibs":s.saveLibs(t);break;case"changes":let c,d=Number(e.cellNr);for(let t=0;t<this.arrLibs.length;t++)this.arrLibs[t].name===e.libNm&&(c=t);if(void 0===c)break;switch(e.change){case"name":try{i.webview.postMessage({type:"set_frame_back",id:e.id}),this.arrLibs[c].cells[d].name=e.newVal,s.saveLibs(t)}catch(t){i.webview.postMessage({type:"set_frame_red",id:e.id})}break;case"inputs":try{i.webview.postMessage({type:"set_frame_back",id:e.id}),""===e.newVal.trim()?this.arrLibs[c].cells[d].inputs=[]:this.arrLibs[c].cells[d].inputs=e.newVal.split(","),i.webview.postMessage({type:"changes",id:e.libNm+"_"+e.cellNm+"_"+e.cellID+"_NrInputs",val:this.arrLibs[c].cells[d].inputs.length}),s.saveLibs(t)}catch(t){i.webview.postMessage({type:"set_frame_red",id:e.id}),a.window.showErrorMessage(`PROLEAD: The entered input "${e.newVal}" is invalid! please enter inputs seperated by comma ','`)}break;case"outputs":const n=this.arrLibs[c].cells[d].outputs;try{i.webview.postMessage({type:"set_frame_back",id:e.id}),""===e.newVal.trim()?this.arrLibs[c].cells[d].outputs=[]:this.arrLibs[c].cells[d].outputs=e.newVal.split(","),i.webview.postMessage({type:"changes",id:e.libNm+"_"+e.cellNm+"_"+e.cellID+"_NrOutputs",val:this.arrLibs[c].cells[d].outputs.length})}catch(t){i.webview.postMessage({type:"set_frame_red",id:e.id}),a.window.showErrorMessage(`PROLEAD: The entered output "${e.newVal}" is invalid! please enter outputs seperated by comma ','`)}const o=e.newVal.split(",");if(o.length!==n.length){let t=[];for(let e=0;e<n.length;e++)-1===o.indexOf(n[e])&&t.push(e);for(let e=0;e<t.length;e++)this.arrLibs[c].cells[d].formula.splice(Number(t[e]),1);i.webview.postMessage({type:"updateOutputFormula",id:e.libNm+"_"+e.cellNm+"_"+e.cellID+"_formula",newforms:String(this.arrLibs[c].cells[d].formula)})}s.saveLibs(t);break;case"variants":try{i.webview.postMessage({type:"set_frame_back",id:e.id}),""===e.newVal.trim()?this.arrLibs[c].cells[d].variants=[]:this.arrLibs[c].cells[d].variants=e.newVal.split(","),i.webview.postMessage({type:"changes",id:e.libNm+"_"+e.cellNm+"_"+e.cellID+"_NrVariants",val:this.arrLibs[c].cells[d].variants.length}),s.saveLibs(t)}catch(t){i.webview.postMessage({type:"set_frame_red",id:e.id}),a.window.showErrorMessage(`PROLEAD: The entered variant "${e.newVal}" is invalid! please enter variants seperated by comma ','`)}break;case"formula":try{i.webview.postMessage({type:"set_frame_back",id:e.id}),""===e.newVal.trim()?this.arrLibs[c].cells[d].formula[e.formIDX]="":this.arrLibs[c].cells[d].formula[e.formIDX]=e.newVal,s.saveLibs(t)}catch(t){i.webview.postMessage({type:"set_frame_red",id:e.id}),a.window.showErrorMessage("PROLEAD: The entered formula is invalid! please seperate formula lines by comma ','")}}}}static show(e,t,i){const n=e.asWebviewUri(a.Uri.joinPath(t,"js_css","main.js")),o=e.asWebviewUri(a.Uri.joinPath(t,"js_css","reset.css")),l=e.asWebviewUri(a.Uri.joinPath(t,"js_css","vscode.css")),r=e.asWebviewUri(a.Uri.joinPath(t,"js_css","main.css"));this.arrLibs=[],this.arrComments=[],this.arrLibs=s.getLibraries(i);var c="";for(let e=0;e<this.arrLibs.length;e++)c+=`\n            <option value="${this.arrLibs[e].name}" ${this.arrLibs[e].name===i.libraryName.value?"selected":""}>${this.arrLibs[e].name}</option>`;return`\n                <!DOCTYPE html>\n                <html lang="en">\n                    <head>\n                        <meta charSet="utf-8"/>\n                        <title>${s.title}</title>\n                        <link href="${o}" rel="stylesheet">\n                        <link href="${l}" rel="stylesheet">\n                        <link href="${r}" rel="stylesheet">\n                    </head>\n                    <body class="configpage" onkeypress="nextEnter(event)">\n                        <script src="${n}"><\/script>\n                        <div onclick="scroll2top()" id="scroll2top">\n                            <svg width="20" height="20" viewBox="0 0 15 15" xmlns="http://www.w3.org/2000/svg" fill="currentColor">\n                                <path d="M5.36891 7.91926L7.50833 5.77984V11.532H8.50833V5.85271L10.5749 7.91926L11.282 7.21216L8.32545 4.25562H7.61835L4.6618 7.21216L5.36891 7.91926Z"/>\n                                <path d="M14 8C14 11.3137 11.3137 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.3137 2 14 4.68629 14 8ZM13 8C13 5.23858 10.7614 3 8 3C5.23858 3 3 5.23858 3 8C3 10.7614 5.23858 13 8 13C10.7614 13 13 10.7614 13 8Z"/>\n                            </svg>\n                        </div>\n                        <div class="configbar">\n                            <div style="float:left; width:80%;"><h1>Edit Library File</h1></div>\n                            <div style="float:right; width:15%; margin-right:10px;"><button onclick="addNewLib()">Add New Library</button></div>\n                        </div><br><br>\n                        <div class="configgroup" id="library_chooser_box" style="display:block;">\n                            <h2 class="configheader"><strong>Choose Library</strong></h2>\n                            <a style="color:#ababab !important;"> choose one of the libraries out of your specified library file</a>\n                            <div class="configitem">\n                                <select style="display:inline; color:#cccccc; background-color:#3c3c3c; width:79%; height:28px;" name="library_name_chooser" id="library_name_chooser" onchange="libChanged()">`.concat(c)+'\n                                </select>  <button id="library_name_edit" style="display:inline; width:10%;" onclick="showLibCells()">Edit</button> <button class="delete-button" id="library_name_delete" style="display:inline; width:10%;" onclick="deleteLib()">Delete</button>\n                            </div>\n                        </div>\n                    </body>\n                </html>\n        '}static getLibraries(e){let t,i;var o,l,r=[];try{t=n.readFileSync(e.libraryFile.value,"utf-8").split(/\r?\n/)}catch(t){return a.window.showErrorMessage(`PROLEAD: No valid library file at "${e.libraryFile.value}"`),[{name:"",cells:[],strt:0,last:0}]}for(i=0;i<t.length-1&&"%"===t[i].charAt(0);i++)s.arrComments.push(t[i]);for(;i<t.length-1;i++)if(t[i].includes("Library")&&"%"!==t[i].charAt(0)){for((o={name:"",strt:0,last:0,cells:[]}).strt=i++,o.name=t[i],o.last=-1!==t.indexOf("Library",i)?t.indexOf("Library",i)-1:t.length-1;""===t[o.last]||t[o.last].includes("%");)o.last--;o.cells=[],r.push(o)}for(let e=0;e<r.length;e++)for(let i=r[e].strt;i<=r[e].last;i++)if("Reg"===t[i]||"Gate"===t[i]||"Buffer"===t[i]){if((l={name:"",variants:[],inputs:[],outputs:[],formula:[]}).name=t[i],i++,Number(t[i].split(" ")[0])===t[i].split(" ").length-1)l.variants=t[i].split(" "),l.variants.shift(),i++;else{var c=Number(t[i].trimEnd().split(" ")[0]);for((d=t[i].trimEnd().split(" ")).shift(),d.filter((e=>e)),0!==d.length&&(l.variants=l.variants.concat(d)),i++;isNaN(Number(t[i].split(" ")[0]))&&l.variants.length<c;)l.variants=l.variants.concat(t[i].split(" ")),i++}if(Number(t[i].split(" ")[0])===t[i].split(" ").length-1)l.inputs=t[i].split(" "),l.inputs.shift(),i++;else for(c=Number(t[i].trimEnd().split(" ")[0]),(d=t[i].trimEnd().split(" ")).shift(),d.filter((e=>e)),0!==d.length&&(l.inputs=l.inputs.concat(d)),i++;isNaN(Number(t[i].split(" ")[0]))&&l.inputs.length<c;)l.inputs=l.inputs.concat(t[i].split(" ")),i++;var d;if(Number(t[i].split(" ")[0])===t[i].split(" ").length-1)l.outputs=t[i].split(" "),l.outputs.shift(),i++;else for(c=Number(t[i].trimEnd().split(" ")[0]),(d=t[i].trimEnd().split(" ")).shift(),d.filter((e=>e)),0!==d.length&&(l.outputs=l.outputs.concat(d)),i++;isNaN(Number(t[i].split(" ")[0]))&&l.outputs.length<c;)l.outputs=l.outputs.concat(t[i].split(" ")),i++;for(;i<=t.length&&""!==t[i].trim()&&"%"!==t[i].trim().charAt(0);)l.formula.push(t[i].trim()),i++;r[e].cells.push(l)}return r}static saveLibs(e){const t=e.libraryFile.value;if(n.existsSync(t)){n.writeFileSync(t,"");for(let e=0;e<this.arrComments.length;e++)n.appendFileSync(t,this.arrComments[e]+"\n");n.appendFileSync(t,"\n");for(let e=0;e<this.arrLibs.length;e++){n.appendFileSync(t,"Library\n"),n.appendFileSync(t,this.arrLibs[e].name+"\n"),n.appendFileSync(t,"\n");for(let i=0;i<this.arrLibs[e].cells.length;i++){n.appendFileSync(t,this.arrLibs[e].cells[i].name+"\n"),n.appendFileSync(t,`${this.arrLibs[e].cells[i].variants.length}`);for(let a=0;a<this.arrLibs[e].cells[i].variants.length;a++)n.appendFileSync(t,` ${this.arrLibs[e].cells[i].variants[a]}`);n.appendFileSync(t,"\n"),n.appendFileSync(t,`${this.arrLibs[e].cells[i].inputs.length}`);for(let a=0;a<this.arrLibs[e].cells[i].inputs.length;a++)n.appendFileSync(t,` ${this.arrLibs[e].cells[i].inputs[a]}`);n.appendFileSync(t,"\n"),n.appendFileSync(t,`${this.arrLibs[e].cells[i].outputs.length}`);for(let a=0;a<this.arrLibs[e].cells[i].outputs.length;a++)n.appendFileSync(t,` ${this.arrLibs[e].cells[i].outputs[a]}`);n.appendFileSync(t,"\n");for(let a=0;a<this.arrLibs[e].cells[i].formula.length;a++)n.appendFileSync(t,this.arrLibs[e].cells[i].formula[a]+"\n");n.appendFileSync(t,"\n")}n.appendFileSync(t,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n")}a.window.showInformationMessage("PROLEAD: Library File is saved correctly!")}else a.window.showErrorMessage(`PROLEAD: Library edits can not be saved because the path to the library file is invalid (${t})`)}static async deleteCell(e,t,i,n){if("Yes"===await a.window.showWarningMessage("PROLEAD",{modal:!0,detail:`Are you sure you want to delete "${i}"?`},"Yes")){var o=-1;for(let e=0;e<this.arrLibs.length;e++)this.arrLibs[e].name===n.split("_")[0]&&(o=e);if(-1!==o){var l=Number(String(i).split(" ")[1])-1;this.arrLibs[o].cells.splice(l,1),e.webview.postMessage({type:"deleteCell",id:n}),s.saveLibs(t)}else n.includes("newcell")&&e.webview.postMessage({type:"deleteCell",id:n})}}static async deleteLib(e,t,i,o){if("Yes"===await a.window.showWarningMessage("PROLEAD",{modal:!0,detail:`Are you sure you want to delete the library "${i}"?`},"Yes","No")){var l=0;for(let e=0;e<this.arrLibs.length;e++)this.arrLibs[e].name===i&&(l=e);if(this.arrLibs.splice(l,1),i===o&&e.webview.postMessage({type:"deleteContent",content:o}),e.webview.postMessage({type:"deleteLib",id:l}),s.saveLibs(t),i===t.libraryName.value){a.window.showInformationMessage("PROLEAD",{modal:!0,detail:"The deleted library was selected for the configuration.\nPlease select another library via configuration page!"});let e=n.readFileSync(t.argsPath,"utf-8"),s="";const o=n.readFileSync(t.libraryFile.value,"utf-8").split(/\r?\n/);for(let e=0;e<o.length;e++)if("Library"===o[e].split(" ")[0].trim()){s=o[e+1].split(" ")[0].trim();break}e=e.replace(i,s),n.writeFileSync(t.argsPath,e)}}}static async exitLibraryNewlib(e,t){"Yes"===await a.window.showWarningMessage("PROLEAD",{modal:!0,detail:`Do you want to close "${t}" and add new library?`},"Yes","No")&&e.webview.postMessage({type:"exit_editing_newlib"})}static async exitLibraryEditing(e,t){"Yes"===await a.window.showWarningMessage("PROLEAD",{modal:!0,detail:`Do you want to close "${t}" and edit other library?`},"Yes","No")&&e.webview.postMessage({type:"exit_library_editing"})}}t.LibraryProvider=s,s.viewType="prolead-editlibrary",s.title="Edit Library File",s.showOptions=a.ViewColumn.One,s.options={enableScripts:!0,retainContextWhenHidden:!0},s.arrComments=[],s.arrLibs=[]},328:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PreparationProvider=void 0;const a=i(496),n=i(147),s=i(523);class o{constructor(e,t,i){this.theConfigurator=e,this.extPath=i,this.codePath="",this.notifier=t,void 0===a.window.activeTerminal?this.proterminal=a.window.createTerminal(o.terminalName):this.proterminal=a.window.activeTerminal,this.proterminal.show(!0);try{n.readdirSync(this.extPath+"/logs")}catch(e){n.mkdirSync(this.extPath+"/logs")}n.existsSync(this.extPath+"/logs/clone.log")||n.writeFileSync(this.extPath+"/logs/clone.log",""),n.existsSync(this.extPath+"/logs/fetch.log")||n.writeFileSync(this.extPath+"/logs/fetch.log",""),n.existsSync(this.extPath+"/logs/make.log")||n.writeFileSync(this.extPath+"/logs/make.log",""),n.existsSync(this.extPath+"/logs/merge.log")||n.writeFileSync(this.extPath+"/logs/merge.log","")}async getCode(){const e=String(a.workspace.getConfiguration("prolead").get("runTime.codeFolder"));""===e?this.codeOrPath("",!1):this.validDir(e)?this.checkGitRepo(e)?a.window.showInformationMessage("PROLEAD: You have already cloned the source code successfully!"):n.existsSync(e+"/PROLEAD/.git/config")||e!==this.extPath?this.checkGitRepo(e)?this.codeOrPath("An unexpected error occured, please try again!",!1):"Yes"===await a.window.showInformationMessage("PROLEAD",{modal:!0,detail:`The following folder does not contain cloned PROLEAD code.\nDo you want to clear the folder and clone the code here?\n"${e}"`},"Yes")?(n.rmSync(e+"/PROLEAD",{recursive:!0,force:!0}),setTimeout((()=>{this.codePath=e,this.clone()}),250)):this.codeOrPath("Then please choose one of the following options",!1):(a.window.showInformationMessage("PROLEAD: It seems like PROLEAD is not cloned in the standard path. Clone process started!"),this.codePath=e,this.clone()):this.codeOrPath("It seems like the specified path is not valid",!1)}noConnection(){this.notifier.set("internet connection failed $(error)"),a.window.showErrorMessage("PROLEAD failed!\nPlease connect to the internet and try again!",{modal:!0},"OK")}isConnected(){this.notifier.set("internet connection succeeded $(pass)")}checkGitRepo(e){var t,i;try{this.notifier.set("checking repository $(sync~spin)"),t=n.readFileSync(e+"/PROLEAD/.git/config","utf-8").split(/\r?\n/);for(var s=0;s<t.length;s++){if(t[s].includes("ChairImpSec/PROLEAD")){i=!0,this.notifier.set("checking repository $(pass)");break}s===t.length-1&&(i=!1)}}catch(t){e!==this.extPath&&(this.notifier.set("no repository found $(error)"),console.log(t),a.window.showInformationMessage("PROLEAD: There is no git repository in the code folder. Please clone the code from Github!"))}return i}async codeOrPath(e,t){const i=t?await a.window.showInformationMessage("PROLEAD",{modal:!0,detail:`${e}\nPlease specify a path, clone the code or use the standard path.`},"Set Standard Path","Clone Code","Specify Path"):await a.window.showInformationMessage("PROLEAD",{modal:!0,detail:`${e}\nPlease specify a path you already cloned the code to,\nor choose the standard path to clone the code to it.`},"Set Standard Path","Specify Path");if("Clone Code"===i){const e=String(a.workspace.getConfiguration("prolead").get("runTime.codeFolder"));if(this.validDir(e))if(this.validDir(e+"/PROLEAD")&&0!==n.readdirSync(e+"/PROLEAD").length&&!n.existsSync(e+"/PROLEAD/.git/config"))this.codeOrPath(`A PROLEAD folder exists already but is not cloned from GitHub at:\n"${e}"`,!1);else if(this.validDir(e+"/PROLEAD")&&0!==n.readdirSync(e+"/PROLEAD").length)this.codeOrPath(`A PROLEAD folder exists already and is not empty at:\n"${e}"`,!1);else{if(!this.validDir(e))return a.window.showInformationMessage("PROLEAD: No PROLEAD code is specified. Start process can't be proceeded"),-1;this.codePath=e,this.clone()}else this.codeOrPath(`The specified path is invalid:\n"${e}"`,!0)}else{if("Specify Path"===i){const e=await a.window.showInputBox({placeHolder:"Enter the path where you want to clone PROLEAD to ..",title:"Clone PROLEAD Code",ignoreFocusOut:!0});let t="";try{t=n.readFileSync(e+"/PROLEAD/.git/config","utf-8")}catch(e){}const i=String(a.workspace.getConfiguration("prolead").get("runtime.codeFolder"));return void 0===e?this.codeOrPath("No path was specified!",this.validDir(i)):this.validDir(e)?this.validDir(e+"/PROLEAD")?t.includes("ChairImpSec/PROLEAD")?(a.workspace.getConfiguration("prolead").update("runTime.codeFolder",e,!0),setTimeout((()=>{this.codePath=e,this.startup()}),250)):"Yes"===await a.window.showInformationMessage("PROLEAD",{modal:!0,detail:`The following folder contains incomplete PROLEAD code.\nDo you want to clear the folder and clone the code here?\n"${e}"`},"Yes")?(n.rmSync(e+"/PROLEAD",{recursive:!0,force:!0}),a.workspace.getConfiguration("prolead").update("runTime.codeFolder",e,!0),setTimeout((()=>{this.codePath=e,this.clone()}),250)):this.codeOrPath("Then please choose one of the following options",this.validDir(i)):"Yes"===await a.window.showInformationMessage("PROLEAD",{modal:!0,detail:`The following folder does not contain cloned PROLEAD code.\nDo you want to clear the folder and clone the code here?\n"${e}"`},"Yes")?(a.workspace.getConfiguration("prolead").update("runTime.codeFolder",e,!0),setTimeout((()=>{this.codePath=e,this.clone()}),250)):this.codeOrPath("Then please choose one of the following options",this.validDir(i)):this.codeOrPath("The specified path is invalid!",this.validDir(i)),-1}if("Set Standard Path"!==i)return a.window.showInformationMessage("PROLEAD: No PROLEAD code is specified. Start process can't be proceeded"),-1;this.codePath=this.extPath,a.workspace.getConfiguration("prolead").update("runTime.codeFolder",this.extPath,!0),a.window.showInformationMessage(`PROLEAD: The path to the code folder is now set to "${this.extPath}"`),setTimeout((()=>{this.startup()}),500)}}async checkInternet(){this.notifier.set("checking internet connection $(sync~spin)"),await s.promises.resolve(o.host).then((()=>{this.isConnected()})).catch((()=>{this.noConnection()}))}clone(){this.proterminal.sendText("cd "+this.codePath);try{this.notifier.set("cloning code from repo $(sync~spin)");const e=new Date;n.writeFileSync(this.theConfigurator.extPath+"/logs/clone.log",""),this.proterminal.sendText("git clone --progress https://github.com/ChairImpSec/PROLEAD.git &> "+this.theConfigurator.extPath+"/logs/clone.log"),this.awaitWord(this.theConfigurator.extPath+"/logs/clone.log","Resolving deltas: 100%",this.doneCloning,e,this.notifier,60)}catch(e){this.notifier.set("cloning code failed $(error)"),console.log(e),a.window.showErrorMessage("PROLEAD: There's no file clone.log in the project folder")}}async merge(){let e,t;try{e=n.readFileSync(this.codePath+"/PROLEAD/.git/refs/heads/main","utf-8").substring(0,40)}catch(t){return e="",console.log(t),a.window.showErrorMessage('PROLEAD: File "/PROLEAD/.git/refs/heads/main" not found!'),-1}try{t=n.readFileSync(this.codePath+"/PROLEAD/.git/FETCH_HEAD","utf-8").substring(0,40)}catch(e){return t="",console.log(e),a.window.showErrorMessage('PROLEAD: File "/PROLEAD/.git/FETCH_HEAD" not found!'),-1}if(e!==t)if("yes (recommended)"===await a.window.showInformationMessage("Do you want to install the latest PROLEAD code?","yes (recommended)","no")){this.proterminal.sendText("cd "+this.codePath+"/PROLEAD/");try{this.notifier.set("merging code from repo $(sync~spin)");const e=new Date;n.writeFileSync(this.theConfigurator.extPath+"/logs/merge.log",""),this.proterminal.sendText("git merge --progress &> "+this.theConfigurator.extPath+"/logs/merge.log"),this.awaitWord(this.theConfigurator.extPath+"/logs/merge.log","files changed",this.doneMerging,e,this.notifier,120)}catch(e){this.notifier.set("merging code failed $(error)"),console.log(e),a.window.showErrorMessage("PROLEAD: There's no file merge.log in the project folder")}}else a.window.showInformationMessage("PROLEAD: Maybe there are important updates.. Pleas consider updating your code!");else n.existsSync(this.codePath+"/PROLEAD/release/PROLEAD")?a.window.showInformationMessage("PROLEAD: There are no new code updates."):(this.buildNmake(),a.window.showInformationMessage("PROLEAD: There are no new code updates, but the source is not built.. Building process started!"))}fetch(){function e(t,i,a,s,o){n.existsSync(t)&&""!==n.readFileSync(t).toString()?(a.set("fetching updates succeeded $(pass)"),s()):i>0?setTimeout((()=>{i--,e(t,i,a,s,o)}),100):i<=0&&(a.set("fetching updates failed $(error)"),o())}return this.notifier.set("fetching code updates $(sync~spin)"),n.existsSync(this.codePath+"/PROLEAD/.git/FETCH_HEAD")&&n.rmSync(this.codePath+"/PROLEAD/.git/FETCH_HEAD"),this.proterminal.sendText("cd "+this.codePath+"/PROLEAD/"),this.proterminal.sendText("git fetch --progress origin &> "+this.theConfigurator.extPath+"/logs/fetch.log"),new Promise(((t,i)=>{e(this.codePath+"/PROLEAD/.git/FETCH_HEAD",50,this.notifier,t,i)}))}buildNmake(){this.proterminal.sendText("cd "+this.codePath+"/PROLEAD/");try{this.notifier.set("building code $(sync~spin)");const e=new Date;n.writeFileSync(this.theConfigurator.extPath+"/logs/make.log",""),this.proterminal.sendText("make release | tee "+this.theConfigurator.extPath+"/logs/make.log"),this.awaitWord(this.theConfigurator.extPath+"/logs/make.log","build completed",this.doneMaking,e,this.notifier,600)}catch(e){this.notifier.set("building code failed $(error)"),console.log(e),a.window.showErrorMessage("PROLEAD: There's no file make.log in the project folder")}}doneMaking(e,t){const i=((new Date).getTime()-e.getTime())/1e3;t.set("building code finished $(pass)"),a.window.showInformationMessage(`PROLEAD finished building in ${i.toFixed(1)}s!`)}doneCloning(e,t){const i=((new Date).getTime()-e.getTime())/1e3;t.set("cloning code finished $(pass)"),a.window.showInformationMessage(`PROLEAD finished cloning in ${i.toFixed(1)}s!`)}doneMerging(e,t){const i=((new Date).getTime()-e.getTime())/1e3;t.set("merging code finished $(pass)"),a.window.showInformationMessage(`PROLEAD finished merging in ${i.toFixed(1)}s!`)}awaitWord(e,t,i,a,s,o){o--;let l=n.readFileSync(e,"utf-8").split(/\r?\n/).filter((function(e){return e}));l.length>0&&l[l.length-1].toString().includes(t)?(i(a,s),"build completed"!==t&&this.buildNmake()):o>0&&setTimeout((()=>{this.awaitWord(e,t,i,a,s,o)}),1e3)}validDir(e){try{return n.readdirSync(e),!0}catch(e){return!1}}async startup(){const e=String(a.workspace.getConfiguration("prolead").get("runTime.codeFolder"));this.validDir(e)&&this.checkGitRepo(e)?(this.codePath=e,this.checkInternet().then((()=>{this.fetch().then((()=>{this.merge()})).catch((()=>{}))}))):this.validDir(e)?e!==this.extPath||n.existsSync(e+"/PROLEAD/.git/config")?this.checkGitRepo(e)||(this.codePath=e,this.codeOrPath("It seems like the provided code is not cloned from Github",!0)):this.clone():this.codeOrPath("It seems like the specified path is not valid",!1)}}t.PreparationProvider=o,o.host="https://www.github.com",o.terminalName="Proterminal"},193:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ProjectProvider=void 0;const a=i(496),n=i(561);class s{static handleMessage(e,t,i){switch(e.command){case"nextFiles":try{n.readdirSync(this.modifyPath(String(e.path+"/"+e.name))),a.window.showErrorMessage(`PROLEAD: A folder named "${e.name}" exists already at "${e.path}"!`)}catch(t){if(!n.existsSync(this.modifyPath(e.path))){a.window.showErrorMessage(`PROLEAD: The path "${e.path}" is invalid!`);break}i.webview.postMessage({type:"set_display_none",id:"files_button"}),i.webview.postMessage({type:"set_display_block",id:"names_button"}),i.webview.postMessage({type:"set_display_block",id:"project_files_group"})}break;case"nextNames":var s=!1;n.existsSync(this.modifyPath(e.confValue))?i.webview.postMessage({type:"set_frame_back",id:"config_file"}):(s=!0,i.webview.postMessage({type:"set_frame_red",id:"config_file"}),a.window.showErrorMessage(`PROLEAD: "${e.confValue}" is not valid for "Config File"`)),n.existsSync(this.modifyPath(e.dsgnValue))?i.webview.postMessage({type:"set_frame_back",id:"design_file"}):(s=!0,i.webview.postMessage({type:"set_frame_red",id:"design_file"}),a.window.showErrorMessage(`PROLEAD: "${e.dsgnValue}" is not valid for "Design File"`)),n.existsSync(this.modifyPath(e.librValue))?i.webview.postMessage({type:"set_frame_back",id:"library_file"}):(s=!0,i.webview.postMessage({type:"set_frame_red",id:"library_file"}),a.window.showErrorMessage(`PROLEAD: "${e.librValue}" is not valid for "Library File"`)),s||(i.webview.postMessage({type:"set_display_none",id:"names_button"}),i.webview.postMessage({type:"set_display_block",id:"top_button"}),i.webview.postMessage({type:"set_display_block",id:"file_names_group"}),i.webview.postMessage({type:"update_module_name"}),i.webview.postMessage({type:"update_library_name"}));break;case"create":var o=!1;try{const t=n.readFileSync(this.modifyPath(e.dsgnValue),"utf-8").split(/\r?\n/);for(var l=0;l<t.length;l++)if(t[l].includes(e.modName)){o=!0;break}}catch(e){}var r=!1;try{const t=n.readFileSync(this.modifyPath(e.librValue),"utf-8").split(/\r?\n/);for(l=0;l<t.length;l++)if(t[l].includes(e.libName)){r=!0;break}}catch(e){}var c=!1;if(o&&""!==e.modName?(t.moduleName.value=e.modName,i.webview.postMessage({type:"set_frame_back",id:"module_name"})):(c=!0,i.webview.postMessage({type:"set_frame_red",id:"module_name"}),a.window.showErrorMessage(`PROLEAD: "${e.modName}" was not found in the "Design File"`)),!r||""===e.libName){c=!0,i.webview.postMessage({type:"set_frame_red",id:"library_name"}),a.window.showErrorMessage(`PROLEAD: "${e.libName}" was not found in the "Library File"`);break}if(t.libraryName.value=e.libName,i.webview.postMessage({type:"set_frame_back",id:"library_name"}),!c){var d=!1;try{n.readdirSync(this.modifyPath(String(e.path+"/"+e.name))),a.window.showErrorMessage(`PROLEAD: A folder named "${e.name}" exists already at "${e.path}"!`),d=!0;break}catch(i){if(!n.existsSync(this.modifyPath(e.path))){d=!0,a.window.showErrorMessage(`PROLEAD: The path "${e.path}" is invalid!`);break}t.projectFolder=this.modifyPath(String(e.path+"/"+e.name))}var h=!1;if(n.existsSync(this.modifyPath(String(e.confValue)))?(t.configPath=t.projectFolder+"/config.set",t.configFile.value=t.projectFolder+"/config.set",i.webview.postMessage({type:"set_frame_back",id:"config_file"})):(h=!0,i.webview.postMessage({type:"set_frame_red",id:"config_file"}),a.window.showErrorMessage(`PROLEAD: "${e.confValue}" is not valid for "Config File"`)),n.existsSync(this.modifyPath(String(e.dsgnValue)))?(t.designFile.value=t.projectFolder+"/gate/design.v",i.webview.postMessage({type:"set_frame_back",id:"design_file"})):(h=!0,i.webview.postMessage({type:"set_frame_red",id:"design_file"}),a.window.showErrorMessage(`PROLEAD: "${e.dsgnValue}" is not valid for "Design File"`)),n.existsSync(this.modifyPath(String(e.librValue)))?(t.libraryFile.value=t.projectFolder+"/library.lib",i.webview.postMessage({type:"set_frame_back",id:"library_file"})):(h=!0,i.webview.postMessage({type:"set_frame_red",id:"library_file"}),a.window.showErrorMessage(`PROLEAD: "${e.librValue}" is not valid for "Library File"`)),!d&&!h){n.mkdirSync(this.modifyPath(String(e.path+"/"+e.name))),n.writeFileSync(t.configPath,""),n.copyFileSync(this.modifyPath(e.confValue),t.configPath);try{n.mkdirSync(t.projectFolder+"/gate")}catch(e){}n.writeFileSync(t.designFile.value,""),n.copyFileSync(this.modifyPath(e.dsgnValue),t.designFile.value),n.writeFileSync(t.libraryFile.value,""),n.copyFileSync(this.modifyPath(e.librValue),t.libraryFile.value),t.argsPath=t.projectFolder+"/args.set",t.resultFolder.value=t.projectFolder+"/results";try{n.mkdirSync(t.resultFolder.value)}catch(e){}n.writeFileSync(t.argsPath,"config_file\n"),n.appendFileSync(t.argsPath,t.configFile.value+"\n\n"),n.appendFileSync(t.argsPath,"design_file\n"),n.appendFileSync(t.argsPath,t.designFile.value+"\n\n"),n.appendFileSync(t.argsPath,"library_file\n"),n.appendFileSync(t.argsPath,t.libraryFile.value+"\n\n"),n.appendFileSync(t.argsPath,"library_name\n"),n.appendFileSync(t.argsPath,t.libraryName.value+"\n\n"),n.appendFileSync(t.argsPath,"module_name\n"),n.appendFileSync(t.argsPath,t.moduleName.value+"\n\n"),n.appendFileSync(t.argsPath,"result_folder\n"),n.appendFileSync(t.argsPath,t.resultFolder.value),i.dispose(),a.commands.executeCommand("vscode.openFolder",a.Uri.parse(t.projectFolder))}}break;case"standard":switch(e.setting){case"config_file":i.webview.postMessage({type:"set_standard",id:e.setting,value:a.workspace.getConfiguration("prolead").get("templates.configFile")});break;case"design_file":i.webview.postMessage({type:"set_standard",id:e.setting,value:a.workspace.getConfiguration("prolead").get("templates.designFile")});break;case"library_file":i.webview.postMessage({type:"set_standard",id:e.setting,value:a.workspace.getConfiguration("prolead").get("templates.libraryFile")});break;case"linker_file":i.webview.postMessage({type:"set_standard",id:e.setting,value:a.workspace.getConfiguration("prolead").get("templates.linkerFile")})}break;case"fetchNames":let b;try{b=n.readFileSync(this.modifyPath(e.thepath),"utf-8").split(/\r?\n/)}catch(t){return"module_name_list"===e.theid?a.window.showErrorMessage(`PROLEAD: No Design File found at "${e.thepath}"`):"library_name_list"===e.theid&&a.window.showErrorMessage(`PROLEAD: No Library File found at "${e.thepath}"`),i.webview.postMessage({type:"clear_list",list:e.theid}),-1}switch(e.theid){case"library_name_list":i.webview.postMessage({type:"clear_list",list:e.theid});for(var u=0;u<b.length-1;u++)if(!b[u].includes("% Library")&&b[u].includes("Library")){var p=b[u+1];i.webview.postMessage({type:"add_list_element",list:e.theid,value:p})}break;case"module_name_list":for(i.webview.postMessage({type:"clear_list",list:e.theid}),u=0;u<b.length-1;u++)if(!b[u].includes("% module")&&b[u].includes("module")&&b[u].includes("(")){var g=b[u].indexOf("module "),f="module ".length,m=b[u].indexOf(" (");p=b[u].substring(g+f,m),i.webview.postMessage({type:"add_list_element",list:e.theid,value:p})}}}}static show(e,t){const i=e.asWebviewUri(a.Uri.joinPath(t,"js_css","main.js")),n=e.asWebviewUri(a.Uri.joinPath(t,"js_css","reset.css")),o=e.asWebviewUri(a.Uri.joinPath(t,"js_css","vscode.css")),l=e.asWebviewUri(a.Uri.joinPath(t,"js_css","main.css"));return`<!DOCTYPE html>\n\t\t\t\t<html lang="en">\n                <head>\n                    <meta charSet="utf-8"/>\n\t\t\t\t\t<title>${s.title}</title>\n\t\t\t\t\t<link href="${n}" rel="stylesheet">\n\t\t\t\t\t<link href="${o}" rel="stylesheet">\n\t\t\t\t\t<link href="${l}" rel="stylesheet">\n                </head>\n                <body class="configpage" onkeypress="nextEnter(event)">\n\t\t\t\t\t<script src="${i}"><\/script>\n                    <div onclick="scroll2top()" id="scroll2top">\n                            <svg width="20" height="20" viewBox="0 0 15 15" xmlns="http://www.w3.org/2000/svg" fill="currentColor">\n                                <path d="M5.36891 7.91926L7.50833 5.77984V11.532H8.50833V5.85271L10.5749 7.91926L11.282 7.21216L8.32545 4.25562H7.61835L4.6618 7.21216L5.36891 7.91926Z"/>\n                                <path d="M14 8C14 11.3137 11.3137 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.3137 2 14 4.68629 14 8ZM13 8C13 5.23858 10.7614 3 8 3C5.23858 3 3 5.23858 3 8C3 10.7614 5.23858 13 8 13C10.7614 13 13 10.7614 13 8Z"/>\n                            </svg>\n                        </div>\n\t\t\t\t\t<div class="configbar">\n\t\t\t\t\t\t<div style="float:left; width:80%;"><h1>Create a New Project!</h1></div>\n\t\t\t\t\t</div><br><br>\n\t\t\t\t\t<div class="configgroup" id="project_path_group" style="display:block;">\n                    <h2 class="configheader"><strong>Project Folder</strong></h2><a style="color:#ababab !important;"> specify the folder path and folder name of your new project (path shouldn't end with a slash)</a>\n                        <div class="configitem">\n                            <a><strong>Folder Path</strong></a><br>\n                            <input style="display:inline !important; width:89% !important;" type="text" id="project_folder_path" value="">\n                            <button style="display:inline; width:10%;" onclick="browseFolder()">Browse</button>\n                        </div>\n                        <div class="configitem">\n                            <a><strong>Folder Name</strong></a><br>\n                            <input style="display:inline !important;" type="text" id="project_folder_name" value="">\n                        </div>\n\t\t\t\t\t</div>\n                    <button id="files_button" onclick="nextFiles()" style="display:block; max-width: 920px; margin: 0 auto;">Next</button>\n                    <div class="configgroup" id="project_files_group" style="display:none;">\n                    <h2 class="configheader"><strong>Project Files</strong></h2>\n                        <div class="configitem">\n                            <a><strong>Config File</strong></a><br><a style="color:#ababab !important;"> specify the path to the config file you want to clone for your project (or double click to use the standard file)</a><br>\n                            <input style="display:inline !important; width:89% !important;" type="text" id="config_file" value="" ondblclick="configStandard()"> <button style="display:inline; width:10%;" onclick="browseFile('config_file')">Browse</button>\n                        </div>\n                        <div class="configitem">\n                            <a><strong>Design File</strong></a><br><a style="color:#ababab !important;"> specify the path to the design file you want to clone for your project (or double click to use the standard file)</a><br>\n                            <input style="display:inline !important; width:89% !important;" type="text" id="design_file" value="" ondblclick="designStandard()"> <button style="display:inline; width:10%;" onclick="browseFile('design_file')">Browse</button>\n                        </div>\n                        <div class="configitem">\n                            <a><strong>Library File</strong></a><br><a style="color:#ababab !important;"> specify the path to the library file you want to clone for your project (or double click to use the standard file)</a><br>\n                            <input style="display:inline !important; width:89% !important;" type="text" id="library_file" value="" ondblclick="libraryStandard()"> <button style="display:inline; width:10%;" onclick="browseFile('library_file')">Browse</button>\n                        </div>\n                    </div>\n                    <button id="names_button" onclick="nextNames()" style="display:none; max-width: 920px; margin: 0 auto;">Next</button>\n                    <div class="configgroup" id="file_names_group" style="display:none;">\n                    <h2 class="configheader"><strong>File Names</strong></h2>\n                        <div class="configitem">\n                            <a><strong>Module Name</strong></a><br><a style="color:#ababab !important;"> set the module name to be used from the design file as netlist (or double click to use the standard name)</a><br>\n                            <select style="display:inline; color:#cccccc; background-color:#3c3c3c; width:89%; height:28px;" name="module_name_list" id="module_name_list"></select> <button id="module_name_button" style="display:inline; width:10%;" onclick="updateNames('module_name_list','design_file')">Update</button>\n                        </div>\n                        <div class="configitem">\n                            <a><strong>Library Name</strong></a><br><a style="color:#ababab !important;"> set the library name to be used from the library file (or double click to use the standard name)</a><br>\n                            <select style="display:inline; color:#cccccc; background-color:#3c3c3c; width:89%; height:28px;" name="library_name_list" id="library_name_list"></select>  <button id="library_name_button" style="display:inline; width:10%;" onclick="updateNames('library_name_list','library_file')">Update</button>\n                        </div>\n\t\t\t\t\t</div>\n                    <button id="top_button" onclick="create()" style="display:none; max-width: 920px; margin: 0 auto;">Create</button>\n\t\t\t\t</body>\n            </html>`}static modifyPath(e){for(;-1!==e.indexOf("\\");)e=e.replace("\\","/");return-1!==e.indexOf("/home/")?e=e.substring(e.indexOf("/home/")):-1!==e.indexOf("/etc/")?e=e.substring(e.indexOf("/etc/")):-1!==e.indexOf("/tmp/")?e=e.substring(e.indexOf("/tmp/")):-1!==e.indexOf("/sys/")&&(e=e.substring(e.indexOf("/sys/"))),e}static validatePath(e){return e}}t.ProjectProvider=s,s.viewType="prolead-newproject",s.title="New Prolead Project",s.showOptions=a.ViewColumn.One,s.options={enableScripts:!0,retainContextWhenHidden:!0}},528:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StatusCommand=void 0;const a=i(496);t.StatusCommand=class{constructor(e,t,i,n,s){this.myBar=a.window.createStatusBarItem(`prolead.statuscommand${e}`,a.StatusBarAlignment.Left,10-s),this.myBar.name=`PROLEAD: ${e}`,this.myBar.text=t,this.myBar.command=i,this.myBar.tooltip=new a.MarkdownString(n,!0),this.status="hidden"}get(){return this.myBar}show(){this.myBar.show(),this.status="shown"}hide(){this.myBar.hide(),this.status="hidden"}dispose(){this.myBar.dispose()}}},474:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StatusProvider=void 0;const a=i(496);t.StatusProvider=class{constructor(){this.myBar=a.window.createStatusBarItem("prolead.statusbar",a.StatusBarAlignment.Left,10),this.myBar.accessibilityInformation={label:"Status Bar of PROLEAD",role:"Gives updates on the progress and important hints"},this.myBar.name="PROLEAD",this.myBar.command="prolead.switchstatusicons",this.myBar.text="PROLEAD: ",this.myBar.tooltip=new a.MarkdownString("Click to show/hide PROLEAD icons in the status bar",!0)}tooltip(e){this.myBar.tooltip=e}background(e){"red"===e?this.myBar.backgroundColor=new a.ThemeColor("statusBarItem.errorBackground"):"default"===e&&(this.myBar.backgroundColor=void 0)}blink(){setTimeout((()=>{this.background("red")}),0),setTimeout((()=>{this.background("default")}),500),setTimeout((()=>{this.background("red")}),1250),setTimeout((()=>{this.background("default")}),1750)}set(e,t,i){""!==e&&(this.myBar.text=`PROLEAD: ${e}`),t&&(this.myBar.command=t),i&&(this.myBar.tooltip=i)}get(){return this.myBar}show(){this.myBar.show()}hide(){this.myBar.hide()}dispose(){this.myBar.dispose()}}},153:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.WebviewProvider=void 0;const a=i(147),n=i(496);class s{static handleMessage(e,t,i){switch(e.command){case"save":t.isValid(e.libraryFile,"library_file")&&(t.libraryFile.value=e.libraryFile),t.isValid(e.libraryName,"library_name",e.libraryFile)&&(t.libraryName.value=e.libraryName),t.isValid(e.designFile,"design_file")&&(t.designFile.value=e.designFile),t.isValid(e.moduleName,"module_name",e.designFile)&&(t.moduleName.value=e.moduleName),t.isValid(e.configFile,"config_file")&&(t.configFile.value=e.configFile),t.isValid(e.resultFolder,"result_folder")&&(t.resultFolder.value=e.resultFolder),!0===e.compactDistributions?t.compactDistributions.value="yes":t.compactDistributions.value="no",t.isValid(e.effectSize,"effect_size")&&(t.effectSize.value=parseFloat(e.effectSize)),t.isValid(e.maxDistanceMultivariate,"max_distance_multivariate")&&(t.maxDistanceMultivariate.value=parseInt(e.maxDistanceMultivariate,10)),!0===e.minimizeProbeSets?t.minimizeProbeSets.value="yes":t.minimizeProbeSets.value="no",t.isValid(e.multivariateTest,"multivariate_test")&&(t.multivariateTest.value=e.multivariateTest),t.isValid(e.noOfTestClockCycles.split(","),"no_of_test_clock_cycles")&&(t.noOfTestClockCycles.value=e.noOfTestClockCycles.split(",")),t.isValid(e.orderOfTest,"order_of_test")&&(t.orderOfTest.value=parseInt(e.orderOfTest,10)),t.isValid(e.probesExclude.split(","),"probes_exclude")&&(t.probesExclude.value=e.probesExclude.split(",")),t.isValid(e.probesInclude.split(","),"probes_include")&&(t.probesInclude.value=e.probesInclude.split(",")),!0===e.transitionalLeakage?t.transitionalLeakage.value="yes":t.transitionalLeakage.value="no",t.isValid(e.clockSignalName,"clock_signal_name")&&(t.clockSignalName.value=e.clockSignalName),t.isValid(e.endCondition,"end_condition")&&(t.endCondition.value=e.endCondition),t.isValid(e.endWaitCycles,"end_wait_cycles")&&(t.endWaitCycles.value=e.endWaitCycles),t.isValid(e.expectedOutput.split(","),"expected_output",e.noOfGroups)&&(t.expectedOutput.value=e.expectedOutput.split(",").filter((function(e){return e}))),t.isValid(e.maxClockCycle,"max_clock_cycle")&&(t.maxClockCycle.value=e.maxClockCycle),t.isValid(e.noOfAlwaysRandomInputs.split(","),"no_of_always_random_inputs")&&(t.noOfAlwaysRandomInputs.value=e.noOfAlwaysRandomInputs.split(",")),t.isValid(e.noOfGroups.split(","),"no_of_groups")&&(t.noOfGroups.value=e.noOfGroups.split(",")),t.noOfInitialInputs.value=Number(e.noOfInitialInput),t.isValid(e.noOfInitialClockCycles.split(","),"no_of_initial_clock_cycles")&&(t.noOfInitialClockCycles.value=e.noOfInitialClockCycles.split(",")),t.isValid(e.noOfOutputs.split(","),"no_of_outputs")&&(t.noOfOutputs.value=e.noOfOutputs.split(",")),!0===e.waveformSimulation?t.waveformSimulation.value="yes":t.waveformSimulation.value="no",t.isValid(e.maxNoOfThreads,"max_no_of_threads")&&(t.maxNoOfThreads.value=e.maxNoOfThreads),t.isValid(e.noOfEntriesInReport,"no_of_entries_in_report")&&(t.noOfEntriesInReport.value=e.noOfEntriesInReport),t.isValid(e.noOfProbingSetsPerStep,"no_of_probing_sets_per_step")&&(t.noOfProbingSetsPerStep.value=e.noOfProbingSetsPerStep),t.isValid(e.noOfSimulations,"no_of_simulations")&&(t.noOfSimulations.value=e.noOfSimulations),t.isValid(e.noOfStepSimulations,"no_of_step_simulations",e.noOfSimulations)&&(t.noOfStepSimulations.value=e.noOfStepSimulations),t.isValid(e.noOfStepWriteResults,"no_of_step_write_results",e.noOfSimulations+","+e.noOfStepSimulations)&&(t.noOfStepWriteResults.value=e.noOfStepWriteResults),!0===e.removeFullProbingSets?t.removeFullProbingSets.value="yes":t.removeFullProbingSets.value="no",t.update(),n.window.showInformationMessage("PROLEAD: Settings are saved correctly!");break;case"notsaved":n.window.showErrorMessage(`PROLEAD: Settings are not saved! Following errors still exist: "${String(e.errorlist)}"`);break;case"fetchNames":let d;try{d=a.readFileSync(e.thepath,"utf-8").split(/\r?\n/)}catch(t){return"module_name_list"===e.theid?n.window.showErrorMessage(`PROLEAD: No Design File found at "${e.thepath}"`):"library_name_list"===e.theid&&n.window.showErrorMessage(`PROLEAD: No Library File found at "${e.thepath}"`),i.webview.postMessage({type:"clear_list",list:e.theid}),-1}switch(e.theid){case"library_name_list":i.webview.postMessage({type:"clear_list",list:e.theid});for(var s=0;s<d.length-1;s++)if(d[s].includes("Library")&&!d[s].includes("% Library")){var o=d[s+1];i.webview.postMessage({type:"add_list_element",list:e.theid,value:o})}break;case"module_name_list":for(i.webview.postMessage({type:"clear_list",list:e.theid}),s=0;s<d.length-1;s++)if(d[s].includes("module")&&!d[s].includes("% module")){var l=d[s].indexOf("module "),r="module ".length,c=d[s].indexOf(" (");o=d[s].substring(l+r,c),i.webview.postMessage({type:"add_list_element",list:e.theid,value:o})}}break;case"validateFile":try{a.readFileSync(e.path),i.webview.postMessage({type:"validateFile",id:e.id,valid:"1"})}catch(t){i.webview.postMessage({type:"validateFile",id:e.id,valid:"-1"}),n.window.showErrorMessage(`PROLEAD: The path of ${e.id} is invalid!`)}break;case"validateFolder":try{a.readdirSync(e.path),i.webview.postMessage({type:"validateFolder",id:e.id,valid:"1"})}catch(t){i.webview.postMessage({type:"validateFolder",id:e.id,valid:"-1"}),n.window.showErrorMessage(`PROLEAD: The path of ${e.id} is invalid!`)}break;case"wireProbesInvalid":n.window.showErrorMessage(`PROLEAD: ${e.text}`);break;case"checkWireHint":for(let t=0;t<this.wiresSingles.length;t++)if(e.val.includes(this.wiresSingles[t].name))return i.webview.postMessage({type:"setWireHint",id:e.id,hint:this.wiresSingles[t].hint}),1;for(let t=0;t<this.wiresVectors.length;t++)if(e.val.includes(this.wiresVectors[t].name))return i.webview.postMessage({type:"setWireHint",id:e.id,hint:this.wiresVectors[t].hint}),1;break;case"inputSignalNamesCSN":for(let t=0;t<this.inputSignals.length;t++)if(this.inputSignals[t].name===e.value){i.webview.postMessage({type:"inputSignalNamesCSN",id:e.id+"_bit",min:this.inputSignals[t].min,max:this.inputSignals[t].max,value:e.bit,placeholder:this.inputSignals[t].placeholder});break}break;case"inputSignalNamesARI":for(let t=0;t<this.inputSignals.length;t++)if(this.inputSignals[t].name===e.value){i.webview.postMessage({type:"inputSignalNamesARI",msb:e.id+"_msb",lsb:e.id+"_lsb",min:this.inputSignals[t].min,max:this.inputSignals[t].max,placeholder:this.inputSignals[t].placeholder});break}break;case"emptyBitField":n.window.showErrorMessage("PROLEAD: Bit field can not be empty!");break;case"invalidBitField":n.window.showErrorMessage(`PROLEAD: "${e.val}" is invalid! Please choose a bit between ${e.min} and ${e.max}`);break;case"LSBgreaterMSB":n.window.showErrorMessage(`PROLEAD; "${e.msb}:${e.lsb}" is invalid! MSB must be greater than LSB.`);break;case"valueMustBeInteger":n.window.showErrorMessage(`PROLEAD: The ${e.name} must be an integer!`);break;case"testClockCycleMin":n.window.showErrorMessage(`PROLEAD: The value of ${e.name} "${e.val}" is too low! It must be in range [${e.max}:${e.min}]`);break;case"testClockCycleMax":n.window.showErrorMessage(`PROLEAD: The value of ${e.name} "${e.val}" is too high! It must be in range [${e.max}:${e.min}]`);break;case"testClockCycleB>E":n.window.showErrorMessage("PROLEAD: The begin of the test clock cycle must be less than or equal to the end!");break;case"testClockCycleOverlaps":n.window.showErrorMessage(`PROLEAD: The test clock cycle "${e.name}" overlaps with the exisiting cycle "${e.existing}"!`);break;case"randomInputsExists":n.window.showErrorMessage(`PROELAD: "${e.name}" already exists as a random input!`);break;case"randomInputsOverlaps":n.window.showErrorMessage(`PROELAD: "${e.name}" overlaps with "${e.existing}"!`);break;case"clockSignalAlreadyUsed":e.vector?n.window.showErrorMessage(`PROLEAD: Signal "${e.name}[${e.bit}]" is already used as Clock Signal Name`):n.window.showErrorMessage(`PROLEAD: Signal "${e.name}" is already used as Clock Signal Name`);break;case"clockSignalUsedAsARI":n.window.showErrorMessage(`PROLEAD: Signal "${e.name}" is already used as Random Input`);break;case"clockCycleReduced":n.window.showInformationMessage(`PROLEAD: The value of ${e.name} has been reduced to ${e.val}!`);break;case"checkEndConditionIfVector":""===this.outputSignals[Number(e.index)].min&&""===this.outputSignals[Number(e.index)].max?i.webview.postMessage({type:"notEndConditionVector"}):i.webview.postMessage({type:"isEndConditionVector",min:this.outputSignals[Number(e.index)].min,max:this.outputSignals[Number(e.index)].max,placeholder:this.outputSignals[Number(e.index)].placeholder});break;case"endConditionOutputChanged":i.webview.postMessage({type:"endConditionOutputChanged",min:this.outputSignals[Number(e.index)].min,max:this.outputSignals[Number(e.index)].max,placeholder:this.outputSignals[Number(e.index)].placeholder,readOnly:""===this.outputSignals[Number(e.index)].min});break;case"endConditionSignalBit2Low":n.window.showErrorMessage(`PROLEAD: The ${e.name} value "${e.value}" is too low! It must be in range [${e.max}:${e.min}]`);break;case"endConditionSignalBit2High":n.window.showErrorMessage(`PROLEAD: The ${e.name} value "${e.value}" is too high! It must be in range [${e.max}:${e.min}]`);break;case"endConditionSignalLSB>MSB":n.window.showErrorMessage(`PROLEAD: LSB "${e.lsb}" can not be greater than MSB "${e.msb}"!`);break;case"endConditionSignalNoMSB":n.window.showErrorMessage("PROLEAD: Please specify the MSB of the end condition signal before editing the value!");break;case"endConditionSignalNoLSB":n.window.showErrorMessage("PROLEAD: Please specify the LSB of the end condition signal before editing the value!");break;case"endConditionValueInvalid":"hex"===e.sys?n.window.showErrorMessage(`PROLEAD: The end condition value contains non-hexadecimal characters "${e.chars}"`):"bin"===e.sys&&n.window.showErrorMessage(`PROLEAD: The end condition value contains non-binary characters "${e.chars}"`);break;case"endConditionSignalValueEmpty":n.window.showErrorMessage("PROLEAD: The value of the end condition signal can not be empty!");break;case"endConditionSignalLSBMSBeEmpty":n.window.showErrorMessage("PROLEAD: Please specify the MSB and LSB of end condition signal!");break;case"endConditionSignalMSBEmpty":n.window.showErrorMessage("PROLEAD: Please specify the MSB of end condition signal!");break;case"endConditionSignalLSBEmpty":n.window.showErrorMessage("PROLEAD: Please specify the LSB of end condition signal!");break;case"endConditionTimeValueEmpty":n.window.showErrorMessage("PROLEAD: The time signal value of end condition can not be empty!");break;case"endConditionTimeValueInvalid":n.window.showErrorMessage(`PROLEAD: The time signal value of end condition contains invalid characters "${e.chars}", please use only numbers!`);break;case"endConditionTimeValueMin":n.window.showErrorMessage(`PROLEAD: The time signal value of end condition "${e.val}" should be greater than or equal to ${e.min}!`);break;case"endConditionTimeValueMax":n.window.showErrorMessage(`PROLEAD: The time signal value of end condition "${e.val}" should be less than or equal to Max Clock Cycle ${e.max}!`);break;case"numberOfGroupsInvalid":const h=String(e.id).split("_")[3];n.window.showErrorMessage(`PROLEAD: The ${h} of groups must be in range ${e.min}-${e.max}`);break;case"groupValueInvalid":let u;"bin"===e.system?u="non-binary":"hex"===e.system&&(u="non-hexadecimal"),n.window.showErrorMessage(`PROLEAD: The group ${e.group} contains ${u} characters "${e.chars}"`);break;case"groupSizeHexInvalid":n.window.showInformationMessage(`PROLEAD: The group size ${e.size} is incompatible for hex values. Group size should be factor of 4!`);break;case"groupSizeHexRandomInvalid":n.window.showInformationMessage(`PROLEAD: The value "${e.val}" can not be converted into a hex value!`);break;case"outputSignalsInfos":for(let t=0;t<this.outputSignals.length;t++)if(this.outputSignals[t].name===e.value){i.webview.postMessage({type:"outputSignalsInfos",min:this.outputSignals[t].min,max:this.outputSignals[t].max,placeholder:this.outputSignals[t].placeholder});break}break;case"emptyExpectedOutputAndSomeOutputShares":n.window.showErrorMessage("PROLEAD: Empty expected output while Number of Output Shares is greater than zero is not allowed!");break;case"outputNoBitSpecified":n.window.showInformationMessage(`PROLEAD: Please specify the ${e.name} before creating a new output!`);break;case"outputShareOverlaps":n.window.showErrorMessage(`PROELAD: "${e.name}" overlaps with "${e.existing}"!`);break;case"checkFloatGreaterZero":"effect_size"===e.id&&n.window.showErrorMessage('PROLEAD: The "Effect Size" must be greater than 0!');break;case"checkValueNotInteger":"max_distance_multivariate"===e.id?n.window.showErrorMessage('PROLEAD: The "Max Distance Multivariate" must be an integer!'):"end_wait_cycles"===e.id?n.window.showErrorMessage('PROLEAD: The "End Wait Cycles" must be an integer!'):"order_of_test"===e.id?n.window.showErrorMessage('PROLEAD: The "Order Of Test" must be an integer!'):"max_clock_cycle"===e.id?n.window.showErrorMessage('PROLEAD: The "Max Clock Cycle" must be an integer!'):"max_no_of_threads"===e.id?n.window.showErrorMessage('PROLEAD: The "Max Number of Threads" must be an integer!'):"no_of_entries_in_report"===e.id?n.window.showErrorMessage('PROLEAD: The "Number of Entries in Report" must be an integer!'):"no_of_probing_sets_per_step"===e.id?n.window.showErrorMessage('PROLEAD: The "Number of Probing Sets per Step" must be an integer!'):"no_of_initial_clock_cycles"===e.id?n.window.showErrorMessage('PROLEAD: The "Total Number of States" must be an integer!'):e.id.includes("_durval")?n.window.showErrorMessage('PROLEAD: The "State Duration" must be an integer number!'):e.id.includes("_sigval")&&n.window.showErrorMessage('PROLEAD: The "Number of State Signals" must be an integer!');break;case"checkIntegerGreaterZero":"order_of_test"===e.id?n.window.showErrorMessage('PROLEAD: The "Order Of Test" must be greater than 0!'):"max_clock_cycle"===e.id?n.window.showErrorMessage('PROLEAD: The "Max Clock Cycle" must be greater than 0!'):"max_no_of_threads"===e.id?n.window.showErrorMessage('PROLEAD: The "Max Number of Threads" must be greater than 0!'):"no_of_entries_in_report"===e.id?n.window.showErrorMessage('PROLEAD: The "Number of Entries in Report" must be greater than 0!'):"no_of_probing_sets_per_step"===e.id?n.window.showErrorMessage('PROLEAD: The "Number of Probing Sets per Step" must be greater than 0!'):"no_of_initial_clock_cycles"===e.id?n.window.showErrorMessage('PROLEAD: The "Total Number of States" must be greater than 0!'):e.id.includes("_durval")?n.window.showErrorMessage('PROLEAD: The "State Duration" must be greater than 0!'):e.id.includes("_sigval")&&n.window.showErrorMessage('PROLEAD: The "Number of State Signals" must be greater than 0!');break;case"checkIntegerEqualZero":"max_distance_multivariate"===e.id?n.window.showErrorMessage('PROLEAD: The "Max Distance Multivariate" must be greater than or equal to 0!'):"end_wait_cycles"===e.id&&n.window.showErrorMessage('PROLEAD: The "End Wait Cycles" must be greater than or equal to 0!');break;case"checkIntegerMaxInvalid":n.window.showErrorMessage(`PROLEAD: The value of ${e.name} "${e.val}" must not exceed ${e.max}!`);break;case"initialInputsInvalidCharacter":n.window.showErrorMessage(`PROLEAD: The ${e.name} contains invalid characters "${e.chars}"`);break;case"initialInputsTooManyAsterisks":n.window.showErrorMessage("PROLEAD: The special number of initial inputs can not contain more than one asterisk!");break;case"initialInputsWrongLength":n.window.showErrorMessage("PROLEAD: The specified number of clock cycles does not correspond to total special number of initial inputs");break;case"noOfSimulationsInvalid0":n.window.showErrorMessage('PROLEAD: The "Number of Simulations" must be greater than 0!"');break;case"noOfSimulationsInvalid64":n.window.showErrorMessage('PROLEAD: The "Number of Simulations" must be a factor of 64!');break;case"noOfStepSimulationsInvalid0":n.window.showErrorMessage('PROLEAD: The "Number of Step Simulations" must be greater than 0!');break;case"noOfStepSimulationsInvalid64":n.window.showErrorMessage('PROLEAD: The "Number of Step Simulations" must be a factor of 64!"');break;case"noOfStepSimulationsInvalidSim":n.window.showErrorMessage('PROLEAD: The "Number of Step Simulations" must be a divisor of "Number of Simulations"!');break;case"noOfStepWriteInvalid0":n.window.showErrorMessage('PROLEAD: The "Number of Step Write Results" must be greater than 0!');break;case"noOfStepWriteInvalid64":n.window.showErrorMessage('PROLEAD: The "Number of Step Write Results" must be a factor of 64!"');break;case"noOfStepWriteInvalidSim":n.window.showErrorMessage('PROLEAD: The "Number of Step Write Results" must be a divisor of "Number of Simulations"!');case"noOfStepWriteInvalidStepSim":n.window.showErrorMessage('PROLEAD: The "Number of Step Write Results" must be a factor of "Number of Step Simulations"!');break;case"getInputSignals":for(let e=0;e<this.inputSignals.length;e++)i.webview.postMessage({type:"setInputSignals",name:this.inputSignals[e].name,min:this.inputSignals[e].min,max:this.inputSignals[e].max,placeholder:this.inputSignals[e].placeholder});break;case"getOutputSignals":for(let e=0;e<this.outputSignals.length;e++)i.webview.postMessage({type:"setOutputSignals",name:this.outputSignals[e].name,min:this.outputSignals[e].min,max:this.outputSignals[e].max,placeholder:this.outputSignals[e].placeholder});break;case"stateSignalValueInvalid":const p="bin"===e.sys?"non-binary":"non-hexadecimal";n.window.showErrorMessage(`PROLEAD: The ${e.signal} of ${e.state} contains ${p} characters "${e.chars}"`);break;case"stateSignalValHexInvalid":n.window.showInformationMessage(`PROLEAD: The length "${e.length}" of ${e.signal} in ${e.state} is incompatible for hex values.`);break;case"stateShareIndexInteger":n.window.showErrorMessage("PROLEAD: The share index must be an integer!");break;case"stateShareIndexPositive":n.window.showErrorMessage("PROLEAD: The share index must be greater than or equal to 0!");break;case"stateShareBitInteger":n.window.showErrorMessage("PROLEAD: The share index must be an integer!");break;case"stateShareBitInvalid":n.window.showErrorMessage(`PROLEAD: The share index must be in the range [${e.max}:0]`);break;case"newShareSizeInvalid":n.window.showInformationMessage(`PROLEAD: The ${e.bit} of ${e.signal} in ${e.state} is greater than the new group size`)}}static show(e,t,i){const o=e.asWebviewUri(n.Uri.joinPath(t,"js_css","main.js")),l=e.asWebviewUri(n.Uri.joinPath(t,"js_css","reset.css")),r=e.asWebviewUri(n.Uri.joinPath(t,"js_css","vscode.css")),c=e.asWebviewUri(n.Uri.joinPath(t,"js_css","main.css"));let d,h;const u="<h4>Please open a new project or specify a valid path and open this page again!</h4>";i.refresh();let p,g,f,m=0,b=0,y=0,w=0,v=0,_="",k="",S="",x="",P="",O="",E=0,F=[0,"","",0,""],C="",$="",L="",N="",M="",R="",D="",A="",I=[],T=[],V="",B="",j="",G="",W=0;if(this.wiresSingles=[],this.wiresVectors=[],this.inputSignals=[],this.outputSignals=[],a.existsSync(i.argsPath)){var z="",H="";try{const e=a.readFileSync(i.designFile.value,"utf-8").split(/\r?\n/);for(let t=0;t<e.length;t++)if(!e[t].includes("% module")&&e[t].includes("module")&&e[t].includes("(")){var U=e[t].indexOf("module "),q="module ".length,Y=e[t].indexOf(" (");z+=`\n\t\t\t\t\t\t<option value="${Z=e[t].substring(U+q,Y)}" ${i.moduleName.value===Z?"selected":""}>${Z}</option>`}}catch(e){}try{const e=a.readFileSync(i.libraryFile.value,"utf-8").split(/\r?\n/);for(let t=0;t<e.length-1;t++){var Z;!e[t].includes("% Library")&&e[t].includes("Library")&&(H+=`\n\t\t\t\t\t\t<option value="${Z=e[t+1]}" ${i.libraryName.value===Z?"selected":""}>${Z}</option>`)}}catch(e){}d='<h2 class="configheader"><strong>Arguments</strong></h2>\n\t\t\t<div class="configitem" style="display:none;">\n\t\t\t\t<div style="display:block;">\n\t\t\t\t\t<a><strong>Code Folder</strong> '.concat("optional"===i.codeFolder.importance?"(optional)":"")+`</a> <a href="#arguments" title="${i.codeFolder.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="code_folder" style="display:inline !important; width:89% !important;" value="${i.codeFolder.value}" onchange="validateFile(this.id, this.value)"> <button class="action-button" style="display:inline; width:10%;" onclick="#">Browse</button>\n\t\t\t</div>\n\t\t\t<div class="configitem">\n\t\t\t\t<div style="display:block;">\n\t\t\t\t\t<a><strong>Config File</strong> `.concat("optional"===i.configFile.importance?"(optional)":"")+`</a> <a href="#arguments" title="${i.configFile.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="config_file" style="display:inline !important; width:89% !important;" value="${i.configFile.value}" onchange="validateFile(this.id, this.value)"> <button class="action-button" style="display:inline; width:10%;" onclick="browseFile('config_file')">Browse</button>\n\t\t\t</div>\n\t\t\t<div class="configitem">\n\t\t\t\t<div style="display:block;">\n\t\t\t\t\t<a><strong>Library File</strong> `.concat("optional"===i.libraryFile.importance?"(optional)":"")+`</a> <a href="#arguments" title="${i.libraryFile.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="library_file" style="display:inline !important; width:89% !important;" value="${i.libraryFile.value}" onchange="validateFile(this.id, this.value)"> <button class="action-button" style="display:inline; width:10%;" onclick="browseFile('library_file')">Browse</button>\n\t\t\t</div>\n\t\t\t<div class="configitem">\n\t\t\t\t<div style="display:block;">\n\t\t\t\t\t<a><strong>Library Name</strong> `.concat("optional"===i.libraryName.importance?"(optional)":"")+`</a> <a href="#arguments" title="${i.libraryName.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<select style="display:inline; color:#cccccc; background-color:#3c3c3c; width:89%; height:28px;" name="library_name_list" id="library_name_list">${H}</select> <button class="action-button" id="module_name_button" style="display:inline; width:10%;" onclick="updateNames('library_name_list','library_file')">Update</button>\n\t\t\t</div>\n\t\t\t<div class="configitem">\n\t\t\t\t<div style="display:block;">\n\t\t\t\t\t<a><strong>Design File</strong> `.concat("optional"===i.designFile.importance?"(optional)":"")+`</a> <a href="#arguments" title="${i.designFile.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="design_file" style="display:inline !important; width:89% !important;" value="${i.designFile.value}" onchange="validateFile(this.id, this.value)"> <button class="action-button" style="display:inline; width:10%;" onclick="browseFile('design_file')">Browse</button>\n\t\t\t</div>\n\t\t\t<div class="configitem">\n\t\t\t\t<div style="display:block;">\n\t\t\t\t\t<a><strong>Module Name</strong> `.concat("optional"===i.moduleName.importance?"(optional)":"")+`</a> <a href="#arguments" title="${i.moduleName.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<select style="display:inline; color:#cccccc; background-color:#3c3c3c; width:89%; height:28px;" name="library_name_list" id="module_name_list">${z}</select> <button class="action-button" id="module_name_button" style="display:inline; width:10%;" onclick="updateNames('module_name_list','design_file')">Update</button>\n\t\t\t</div>\n\t\t\t<div class="configitem" style="display:none;">\n\t\t\t\t<div style="display:block;">\n\t\t\t\t\t<a><strong>Linker File</strong> `.concat("optional"===i.linkerFile.importance?"(optional)":"")+`</a> <a href="#arguments" title="${i.linkerFile.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="linker_file" style="display:inline !important; width:89% !important;" value="${i.linkerFile.value}" onchange="validateFile(this.id, this.value)"> <button class="action-button" style="display:inline; width:10%;" onclick="browseFile('linker_file')">Browse</button>\n\t\t\t</div>\n\t\t\t<div class="configitem">\n\t\t\t\t<div style="display:block;">\n\t\t\t\t\t<a><strong>Result Folder</strong> `.concat("optional"===i.resultFolder.importance?"(optional)":"")+`</a> <a href="#arguments" title="${i.resultFolder.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="result_folder" style="display:inline !important; width:89% !important;" value="${i.resultFolder.value}" onchange="validateFolder(this.id, this.value)"> <button class="action-button" style="display:inline; width:10%;" onclick="#">Browse</button>\n\t\t\t</div>`}else d='<div style="text-align:center;">\n\t\t\t<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="red" width="100%" height="60"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.6 1c1.6.1 3.1.9 4.2 2 1.3 1.4 2 3.1 2 5.1 0 1.6-.6 3.1-1.6 4.4-1 1.2-2.4 2.1-4 2.4-1.6.3-3.2.1-4.6-.7-1.4-.8-2.5-2-3.1-3.5C.9 9.2.8 7.5 1.3 6c.5-1.6 1.4-2.9 2.8-3.8C5.4 1.3 7 .9 8.6 1zm.5 12.9c1.3-.3 2.5-1 3.4-2.1.8-1.1 1.3-2.4 1.2-3.8 0-1.6-.6-3.2-1.7-4.3-1-1-2.2-1.6-3.6-1.7-1.3-.1-2.7.2-3.8 1-1.1.8-1.9 1.9-2.3 3.3-.4 1.3-.4 2.7.2 4 .6 1.3 1.5 2.3 2.7 3 1.2.7 2.6.9 3.9.6zM7.9 7.5L10.3 5l.7.7-2.4 2.5 2.4 2.5-.7.7-2.4-2.5-2.4 2.5-.7-.7 2.4-2.5-2.4-2.5.7-.7 2.4 2.5z"></path></svg>\n\t\t\t'.concat('<h2 style="color:#ff0000 !important;">Error! The path to args.set is not specified.</h2>')+"\n\t\t\t".concat(u)+"\n\t\t\t</div>";if(a.existsSync(i.configPath)){try{let e=a.readFileSync(i.designFile.value,"utf-8").split(/\r?\n/);for(let t=0;t<e.length;t++){let i=e[t].trim().split(" ")[0];if("input"===i&&e[t].includes(":")){const i=e[t].replace("input","").replace(";","").replace(":"," ").trim().split(" ");this.inputSignals.push({name:i[2],min:i[1].replace("]",""),max:i[0].replace("[",""),placeholder:`${i[0].replace("[","")}-${i[1].replace("]","")}`})}else if("input"===i){const i=e[t].replace("input","").replace(";","").trim().split(",");for(let e=0;e<i.length;e++)this.inputSignals.push({name:i[e].trim(),min:"",max:"",placeholder:"No Bits"})}else if("output"===i&&e[t].includes(":")){const i=e[t].replace("output","").replace(";","").replace(":"," ").trim().split(" ");this.outputSignals.push({name:i[2],min:i[1].replace("]",""),max:i[0].replace("[",""),placeholder:`${i[0].replace("[","")}-${i[1].replace("]","")}`})}else if("output"===i){const i=e[t].replace("output","").replace(";","").trim().split(",");for(let e=0;e<i.length;e++)this.outputSignals.push({name:i[e].trim(),min:"",max:"",placeholder:"No Bits"})}else if("wire"===i&&e[t].includes(":")){const i=e[t].replace("wire","").replace(";","").trim().split(" ").filter((e=>e));this.wiresVectors.push({name:i[1],hint:`Vector Range ${i[0]}`})}else if("wire"===i){const i=e[t].replace("wire","").replace(";","").trim().split(",").filter((e=>e));for(let e=0;e<i.length;e++)this.wiresSingles.push({name:i[e].trim(),hint:"Single Wire"});for(t++;!e[t].includes("wire")&&!e[t].includes(":");){const i=e[t].replace(";","").trim().split(",").filter((e=>e));for(let e=0;e<i.length;e++)this.wiresSingles.push({name:i[e].trim(),hint:"Single Wire"});t++}t--}}}catch(e){}try{for(let e=0;e<this.wiresSingles.length;e++)V+=`<option>${this.wiresSingles[e].name}</option>`;for(let e=0;e<this.wiresVectors.length;e++)V+=`<option>${this.wiresVectors[e].name}</option>`}catch(e){}try{for(let e=0;e<this.inputSignals.length;e++)i.clockSignalName.value.includes(this.inputSignals[e].name)&&(b=e);for(let e=0;e<this.inputSignals.length;e++)_+=`\n\t\t\t\t\t<option name="${this.inputSignals[e].name}" ${e===b?"selected":""}>${this.inputSignals[e].name}</option>`,S+=`\n\t\t\t\t\t<option name="${this.inputSignals[e].name}" ${0===e?"selected":""}>${this.inputSignals[e].name}</option>`;for(let e=0;e<this.outputSignals.length;e++)C+=`\n\t\t\t\t\t<option name="${this.outputSignals[e].name}" ${i.endCondition.value.includes(this.outputSignals[e].name)?"selected":""}>${this.outputSignals[e].name}</option>`,"No Bits"!==this.outputSignals[e].placeholder&&(N+=`\n\t\t\t\t\t<option name="${this.outputSignals[e].name}">${this.outputSignals[e].name}</option>`)}catch(e){}try{k=i.clockSignalName.value.substring(i.clockSignalName.value.indexOf("[")+1,i.clockSignalName.value.indexOf("]"))}catch(e){}try{if(g=i.endCondition.value.includes("'"),f=i.endCondition.value.includes(":"),g&&f){for(let e=0;e<this.outputSignals.length;e++)if(String(i.endCondition.value).includes(this.outputSignals[e].name)){E=e;break}F[0]=E,F[1]=i.endCondition.value.substring(i.endCondition.value.indexOf("[")+1,i.endCondition.value.indexOf(":")),F[2]=i.endCondition.value.substring(i.endCondition.value.indexOf(":")+1,i.endCondition.value.indexOf("]")),F[3]=i.endCondition.value.includes("b")?0:1,F[4]=i.endCondition.value.substring(i.endCondition.value.indexOf("'")+2)}else if(g&&!f){for(let e=0;e<this.outputSignals.length;e++)if(String(i.endCondition.value).includes(this.outputSignals[e].name)){E=e;break}F[0]=E,F[1]="",F[2]="",F[3]=i.endCondition.value.includes("b")?0:1,F[4]=i.endCondition.value.substring(i.endCondition.value.indexOf("'")+2)}else O=i.endCondition.value.split(" ")[1]}catch(e){}const e=Number(i.probesInclude.value[0])>0?"block":"none";try{for(let e=1;e<=Number(i.probesInclude.value[0]);e++){let t="Not Found";for(let a=0;a<this.wiresVectors.length;a++)if(i.probesInclude.value[e].includes(this.wiresVectors[a].name)){t=this.wiresVectors[e].hint;break}for(let a=0;a<this.wiresSingles.length;a++)if(i.probesInclude.value[e].includes(this.wiresSingles[a].name)){t=this.wiresSingles[e].hint;break}const a="{"===i.probesInclude.value[e].charAt(0)&&"}"===i.probesInclude.value[e].charAt(i.probesInclude.value[e].length-1)?" checked":"",n=i.probesInclude.value[e].includes("*")?" checked":"",s="Single Wire"===t?" disabled":"";B+=`\n\t\t\t\t\t<div id="probes_include_list_${e}" style="display:block; margin:4px 0px; overflow:hidden;">\n\t\t\t\t\t<label style="float:left; width:4%; margin:3px">${e}.</label>\n\t\t\t\t\t<input type="text" id="probes_include_list_${e}_value" value="${i.probesInclude.value[e].replace("{","").replace("}","").replace("*","")}" list="wires_list" style="float:left; width:50%; height:20px; margin:0px 2px;" onchange="probeNameChanged(this.id, this.value)">\n\t\t\t\t\t<input type="text" id="probes_include_list_${e}_hint" value="${t}" style="float:left; width:17.5%; height:20px; margin:0px 2px;" readonly>\n\t\t\t\t\t<input id="probes_include_list_${e}_vector" type="checkbox" style="float:left; width:2%;"${s}${n} onclick="probeFullVector(this.id)">\n\t\t\t\t\t<label for="probes_include_list_${e}_vector" style="float:left; margin:2px;">Full Vector</label>\n\t\t\t\t\t<input id="probes_include_list_${e}_glitch" type="checkbox" style="float:left; width:2%;"${a}>\n\t\t\t\t\t<label for="probes_include_list_${e}_glitch" style="float:left; margin:2px;">Glitch Extended</label>\n\t\t\t\t\t</div>`}}catch(e){}const t=Number(i.probesExclude.value[0])>0?"block":"none";try{for(let e=1;e<=Number(i.probesExclude.value[0]);e++){let t="Not Found";for(let a=0;a<this.wiresVectors.length;a++)if(i.probesExclude.value[e].includes(this.wiresVectors[a].name)){t=this.wiresVectors[e].hint;break}for(let a=0;a<this.wiresSingles.length;a++)if(i.probesExclude.value[e].includes(this.wiresSingles[a].name)){t=this.wiresSingles[e].hint;break}const a="{"===i.probesExclude.value[e].charAt(0)&&"}"===i.probesExclude.value[e].charAt(i.probesExclude.value[e].length-1)?" checked":"",n=i.probesExclude.value[e].includes("*")?" checked":"",s="Single Wire"===t?" disabled":"";j+=`\n\t\t\t\t\t<div id="probes_exclude_list_${e}" style="display:block; margin:4px 0px; overflow:hidden;">\n\t\t\t\t\t<label style="float:left; width:4%; margin:3px">${e}.</label>\n\t\t\t\t\t<input type="text" id="probes_exclude_list_${e}_value" value="${i.probesExclude.value[e].replace("{","").replace("}","").replace("*","")}" list="wires_list" style="float:left; width:50%; height:20px; margin:0px 2px;" onchange="probeNameChanged(this.id, this.value)">\n\t\t\t\t\t<input type="text" id="probes_exclude_list_${e}_hint" value="${t}" style="float:left; width:17.5%; height:20px; margin:0px 2px;" readonly>\n\t\t\t\t\t<input id="probes_exclude_list_${e}_vector" type="checkbox" style="float:left; width:2%;"${s}${n} onclick="probeFullVector(this.id)">\n\t\t\t\t\t<label for="probes_exclude_list_${e}_vector" style="float:left; margin:2px;">Full Vector</label>\n\t\t\t\t\t<input id="probes_exclude_list_${e}_glitch" type="checkbox" style="float:left; width:2%;"${a}>\n\t\t\t\t\t<label for="probes_exclude_list_${e}_glitch" style="float:left; margin:2px;">Glitch Extended</label>\n\t\t\t\t\t</div>`}}catch(e){}try{R='\n\t\t\t\t<div id="test_clock_cycles_list" style="margin:0 auto; width:860px;">';for(let e=1;e<=Number(i.noOfTestClockCycles.value[0]);e++)R+=`\n\t\t\t\t\t<div id="test_clock_cycles_list_${e}" style="max-width:860px; margin:0 auto;">\n\t\t\t\t\t\t<div style="background:#303030; margin-bottom:3px; width:92.5%; float:left;">${i.noOfTestClockCycles.value[e]}</div>\n\t\t\t\t\t\t<button name="test_clock_cycles_list_${e}" class="delete-button" style="display:inline; width:7%; height:14px; padding:0px 0px 0px 0px; float:right; margin-bottom:4px;" onclick="deleteTestClockCycle(this.name)">delete</button>\n\t\t\t\t\t</div>`;R+="\n\t\t\t\t</div>"}catch(e){}try{x='\n\t\t\t\t<div id="always_random_inputs_list" style="margin:0 auto; width:860px;">';for(let e=0;e<Number(i.noOfAlwaysRandomInputs.value[0]);e++)x+=`\n\t\t\t\t\t<div id="always_random_inputs_list_${e}" style="max-width:860px; margin:0 auto;">\n\t\t\t\t\t\t<div style="background: #303030; margin-bottom:3px; width:92.5%; float:left;">${i.noOfAlwaysRandomInputs.value[e+1]}</div>\n\t\t\t\t\t\t<button name="always_random_inputs_list_${e}" class="delete-button" style="display:inline; width:7%; height:14px; padding:0px 0px 0px 0px; float:right; margin-bottom:4px;" onclick="deleteRandomInput(this.name)">delete</button>\n\t\t\t\t\t</div>`;x+="\n\t\t\t\t</div>"}catch(e){}try{P='\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div style="display:block;">\n\t\t\t\t\t\t\t<input type="radio" name="endCondition" id="end_condition_choice_tim" value="end_condition_choice_tim" style="width:2%; margin-top:8px; margin-bottom:15px; display:inline;" '.concat(g?"":"checked")+` onchange="endConditionChoiceChanged()">\n\t\t\t\t\t\t\t<label for="end_condition_choice_tim">Time</label>\n\t\t\t\t\t\t\t<input type="number" id="end_condition_time_value" min="1" max="${i.maxClockCycle.value}" style="display:inline; float:right; width:71.4%; margin-left:4px;" value="${O}" onchange="endConditionTimeChanged()" `.concat(g?"readonly":"")+'>\n\t\t\t\t\t\t\t<input type="text" style="display:inline; float:right; width:18.2%;" value="End at Clock Cycle:" readonly>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style="display:block;">\n\t\t\t\t\t\t\t<label style="display:inline; float:right; width:48%;">Value</label>\n\t\t\t\t\t\t\t<label style="display:inline; float:right; width:12.2%;">Number System</label>\n\t\t\t\t\t\t\t<label style="display:inline; float:right; width:5.5%;">LSB</label>\n\t\t\t\t\t\t\t<label style="display:inline; float:right; width:5.5%;">MSB</label>\n\t\t\t\t\t\t\t<label style="display:inline; float:left; width:16.7%; margin-left:10%;">Output Name</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style="display:block;" id="end_condition_signal">\n\t\t\t\t\t\t\t<input type="radio" name="endCondition" id="end_condition_choice_sig" value="end_condition_choice_sig" style="width:2%; margin-top:8px; margin-bottom:8px; display:inline;" '.concat(g?"checked":"")+` onchange="endConditionChoiceChanged()">\n\t\t\t\t\t\t\t<label for="end_condition_choice_sig">Signal</label>\n\t\t\t\t\t\t\t<input id="end_condition_signal_value" type="text" maxlength="${Number(F[1])-Number(F[2])+1}" style="display:inline; float:right; width:48%; margin-left:4px;" value="${F[4]}" onchange="endConditionValueChanged()" `.concat(g?"":"readonly")+'>\n\t\t\t\t\t\t\t<select id="end_condition_signal_system" style="display:inline; float:right; color:#cccccc; background-color:#3c3c3c; width:12%; height:29px; margin-left:4px;"'.concat(g?"":"disabled")+' onchange="endConditionNrSystemChanged()">\n\t\t\t\t\t\t\t\t<option name="bin" '.concat(0===F[3]?"selected":"")+'>bin</option>\n\t\t\t\t\t\t\t\t<option name="hex" '.concat(1===F[3]?"selected":"")+`>hex</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input id="end_condition_signal_lsb" type="number" style="display:inline; float:right; width:5%; margin-left:4px;" min="${this.outputSignals[E].min}" max="${this.outputSignals[E].max}" placeholder="${this.outputSignals[E].placeholder}" value="${F[2]}" onchange="endConditionBitChanged(this.id)" `.concat(g?"":"readonly")+`>\n\t\t\t\t\t\t\t<input id="end_condition_signal_msb" type="number" style="display:inline; float:right; width:5%; margin-left:4px;" min="${this.outputSignals[E].min}" max="${this.outputSignals[E].max}" placeholder="${this.outputSignals[E].placeholder}" value="${F[1]}" onchange="endConditionBitChanged(this.id)" `.concat(g?"":"readonly")+'>\n\t\t\t\t\t\t\t<select id="end_condition_signal_output" style="display:inline; float:right; color:#cccccc; background-color:#3c3c3c; width:18.2%; height:29px; margin-left:4px;"'.concat(g?"":"disabled")+' onchange="endConditionOutputChanged()">'.concat(C)+"\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>"}catch(e){}try{for(let e=1;e<=Number(i.noOfGroups.value[0]);e++)Number(i.noOfGroups.value[e].substring(0,i.noOfGroups.value[e].indexOf("'")))>m&&(m=Number(i.noOfGroups.value[e].substring(0,i.noOfGroups.value[e].indexOf("'"))));for(let e=1;e<=Number(i.noOfGroups.value[0]);e++){const t=i.noOfGroups.value[e].substring(i.noOfGroups.value[e].indexOf("'")+1).charAt(0),a=i.noOfGroups.value[e].substring(i.noOfGroups.value[e].indexOf("'")+2),n=void 0===i.expectedOutput.value[e-1]?"":i.expectedOutput.value[e-1].substring(i.expectedOutput.value[e-1].indexOf("'")+2);L+=`\n\t\t\t\t\t<div id="number_of_groups_list_${e}" style="display:block;">\n\t\t\t\t\t\t<label for="number_of_groups_list_${e}_val" style="float:left; width:65px; margin:2px 4px;">Group ${e}:</label>\n\t\t\t\t\t\t<select id="number_of_groups_list_${e}_sys" style="display:inline; float:left; color:#cccccc; background-color:#3c3c3c; width:5%; height:20px; margin:0px 4px;" onchange="groupNrSystemChanged(this.id, this.value)">\n\t\t\t\t\t\t\t<option name="bin" `.concat("b"===t?"selected":"")+'>bin</option>\n\t\t\t\t\t\t\t<option name="hex" '.concat("h"===t?"selected":"")+'>hex</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<input type="text" maxlength="'.concat(String("b"===t?m:m/4))+`" value="${a}" id="number_of_groups_list_${e}_val" style="display:inline; float:left; width:27.6%; height:20px; margin:0px 0px 4px 0px; padding:0px;" onchange="groupValueChanged(this.id)">\n\t\t\t\t\t\t<button class="action-button" style="display:inline; float:left; width:2%; height:18px; margin:1px 3px 5px 6px; padding:0px;" onclick="fillGroup('number_of_groups_list_${e}_val','0')">0</button>\n\t\t\t\t\t\t<button class="action-button" style="display:inline; float:left; width:2%; height:18px; margin:1px 3px 5px 3px; padding:0px;" onclick="fillGroup('number_of_groups_list_${e}_val','1')">1</button>\n\t\t\t\t\t\t<button class="action-button" style="display:inline; float:left; width:2%; height:18px; margin:1px 3px 5px 3px; padding:0px;" onclick="fillGroup('number_of_groups_list_${e}_val','$')">$</button>\n\t\t\t\t\t\t<label for="number_of_groups_list_${e}_out" style="float:left; width:118px; margin:2px 4px;">Expected Output:</label>\n\t\t\t\t\t\t<input type="text" maxlength="`.concat(String("b"===t?m:m/4))+`" value="${n}" id="number_of_groups_list_${e}_out" style="display:inline; float:left; width:26.4%; height:20px; margin:0px 0px 4px 0px; padding:0px;" onchange="groupValueChanged(this.id)">\n\t\t\t\t\t\t<button class="action-button" style="display:inline; float:left; width:2%; height:18px; margin:1px 3px 5px 6px; padding:0px;" onclick="fillGroup('number_of_groups_list_${e}_out','0')">0</button>\n\t\t\t\t\t\t<button class="action-button" style="display:inline; float:left; width:2%; height:18px; margin:1px 3px 5px 3px; padding:0px;" onclick="fillGroup('number_of_groups_list_${e}_out','1')">1</button>\n\t\t\t\t\t\t<button class="action-button" style="display:inline; float:left; width:2%; height:18px; margin:1px 3px 5px 3px; padding:0px;" onclick="fillGroup('number_of_groups_list_${e}_out','$')">$</button>\n\t\t\t\t\t</div>`}}catch(e){}$=`\n\t\t\t<input id="number_of_groups_number" type="number" min="1" max="100" placeholder="1-100" value="${i.noOfGroups.value[0]}" style="width:42.5%; float:left; margin:0px 0px 8px 0px;" onchange="numberOfGroupsInputChanged(this.id)">\n\t\t\t<input id="number_of_groups_size" type="number" min="1" max="1024" placeholder="1-1024" value="${m}" style="width:42.5%; float:left; margin:0px 0px 8px 3%;" onchange="numberOfGroupsInputChanged(this.id)">\n\t\t\t<button class="delete-button" style="float:right; width:9.5%; margin:1px 0px 8px 0px;" onclick="clearGroups()">Delete All</button>`;try{for(let e=1;e<=Number(i.noOfOutputs.value[0]);e++)M+=`<div id="no_of_outputs_list_${e}" style="max-width:860px; margin:0 auto;">\n\t\t\t\t\t<div style="background:#303030; margin-bottom:3px; width:92.5%; float:left;">${i.noOfOutputs.value[e]}</div>\n\t\t\t\t\t<button name="no_of_outputs_list_${e}" class="delete-button" style="display:inline; width:7%; height:14px; padding:0px; float:right; margin-bottom:4px;" onclick="deleteOutputShare(this.name)">delete</button>\n\t\t\t\t\t</div>`}catch(e){}try{const e=Number(i.noOfSimulations.value);for(;v<=e;)e%v==0&&T.push(v),v+=64;for(let e=0;e<T.length&&(p=e,!(T[e]>=Number(i.noOfStepSimulations.value)));e++);for(let e=0;e<T.length;e++)D+=`<option>${e}</option>`}catch(e){}try{const e=Number(i.noOfSimulations.value),t=Number(i.noOfStepSimulations.value);for(;w<=e;)e%w==0&&I.push(w),w+=t;for(let e=0;e<I.length&&(y=e,!(I[e]>=Number(i.noOfStepWriteResults.value)));e++);for(let e=0;e<I.length;e++)A+=`<option>${e}</option>`}catch(e){}try{let e=0,t=0,a=1,n=0;e=Number(i.noOfInitialClockCycles.value[0]);for(let s=1;s<=e;){let e="",o=1;if(i.noOfInitialInputs.value>0)t=i.noOfInitialInputs.value;else if(i.noOfInitialClockCycles.value[1+n].includes("*")){const e=i.noOfInitialClockCycles.value[1+n];o=Number(e.substring(0,e.indexOf("*"))),t=Number(e.substring(e.indexOf("*")+1)),n++}else t=Number(i.noOfInitialClockCycles.value[1+n]),n++;for(let s=1;s<=t;s++){const t=i.noOfInitialClockCycles.value[s+n];let o="",l="",r="",c="";for(let e=0;e<this.inputSignals.length;e++)o+=`\n\t\t\t\t\t\t\t<option name="${this.inputSignals[e].name}"`.concat(t.includes(this.inputSignals[e].name)?" selected":"")+`>${this.inputSignals[e].name}</option>`,t.includes(this.inputSignals[e].name)&&(r=this.inputSignals[e].max,l=this.inputSignals[e].min,c=this.inputSignals[e].placeholder);let d="",h="";if(t.split(" ")[0].includes(":")){const e=t.split(" ")[0];d=e.substring(e.indexOf("[")+1,e.indexOf(":")),h=e.substring(e.indexOf(":")+1,e.indexOf("]"))}else if(t.split(" ")[0].includes("[")){const e=t.split(" ")[0];d=e.substring(e.indexOf("[")+1,e.indexOf("]")),h=e.substring(e.indexOf("[")+1,e.indexOf("]"))}else d="",h="";let u="",p="",g="",f="",b="",y="",w="",v="",_=0;if(t.includes("group_in")){u="none",f="block";const e=t.substring(t.indexOf("group_in"));b=e.substring(8,e.indexOf("[")).trim(),e.includes(":")?(y=e.substring(e.indexOf("[")+1,e.indexOf(":")),w=e.substring(e.indexOf(":")+1,e.indexOf("]"))):(y=e.substring(e.indexOf("[")+1,e.indexOf("]")),w=e.substring(e.indexOf("[")+1,e.indexOf("]")))}else{u="block",f="none";const e=t.substring(t.indexOf(" ")+1),i=Number(e.substring(e.indexOf(" ")+1,e.indexOf("'"))),a=e.substring(e.indexOf("'")+1,e.indexOf("'")+2);"b"===a?(p=" selected",_=i):"h"===a&&(g=" selected",_=i/4),v=e.substring(e.indexOf("'")+2)}e+=`\n\t\t\t\t\t\t<div id="initial_clock_cycles_list_${a}_signal_${s}" style="display:block; overflow:hidden; margin:4px 0px; width:774px;">\n\t\t\t\t\t\t\t<label id="initial_clock_cycles_list_${a}_signal_${s}_label" style="float:left; height:16px; width:8%; margin:1px 4px;">Signal ${s}:</label>\n\t\t\t\t\t\t\t<select id="initial_clock_cycles_list_${a}_signal_${s}_name" style="float:left; height:18px; width:`.concat("No Bits"===c?"36.5":"15")+'%; margin-right:3px; margin-left:10px; color:#cccccc; background:#3c3c3c;" onchange="checkStateSignalName(this.id, this.value)">'.concat(o)+`\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input id="initial_clock_cycles_list_${a}_signal_${s}_sigmsb" type="number" min="${l}" max="${r}" value="${d}" style="display:`.concat("No Bits"===c?"none":"inline")+`; float:left; height:18px; width:10%; margin:0px 3px;" placeholder="${c}"`.concat("No Bits"===c?" readonly":"")+` onchange="checkStateSignalBit(this.id)">\n\t\t\t\t\t\t\t<input id="initial_clock_cycles_list_${a}_signal_${s}_siglsb" type="number" min="${l}" max="${r}" value="${h}" style="display:`.concat("No Bits"===c?"none":"inline")+`; float:left; height:18px; width:10%; margin:0px 3px;" placeholder="${c}"`.concat("No Bits"===c?" readonly":"")+` onchange="checkStateSignalBit(this.id)">\n\t\t\t\t\t\t\t<select id="initial_clock_cycles_list_${a}_signal_${s}_valtype" style="float:left; width:8%; height:18px; color:#cccccc; background:#3c3c3c; margin:0px 3px;" onchange="checkStateSignalType(this.id, this.value)">\n\t\t\t\t\t\t\t\t<option`.concat(p)+">bin</option>\n\t\t\t\t\t\t\t\t<option".concat(g)+">hex</option>\n\t\t\t\t\t\t\t\t<option".concat("block"===f?" selected":"")+`>share</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input id="initial_clock_cycles_list_${a}_signal_${s}_value" type="text" value="${v}" maxlength="${_}" style="display:${u}; float:left; height:18px; width:29.25%; margin:0px 3px;" onchange="checkStateSignalValue(this.id, this.value)">\n\t\t\t\t\t\t\t<input id="initial_clock_cycles_list_${a}_signal_${s}_shareidx" type="number" value="${b}" placeholder="Idx" min="0" style="display:${f}; float:left; height:18px; width:7.65%; margin:0px 3px;" onchange="checkStateShareIndex(this.id, this.value)">\n\t\t\t\t\t\t\t<input id="initial_clock_cycles_list_${a}_signal_${s}_sharemsb" type="number" value="${y}" placeholder="MSB" min="${Number(d)-Number(h)}" max="${m-1}" style="display:${f}; float:left; height:18px; width:10%; margin:0px 3px;" onchange="checkStateShareBit(this.id, this.value)">\n\t\t\t\t\t\t\t<input id="initial_clock_cycles_list_${a}_signal_${s}_sharelsb" type="number" value="${w}" placeholder="LSB" min="0" max="${m-Number(d)+Number(h)-1}" style="display:${f}; float:left; height:18px; width:10%; margin:0px 3px;" onchange="checkStateShareBit(this.id, this.value)">\n\t\t\t\t\t\t</div>`}G+=`\n\t\t\t\t<div id="initial_clock_cycles_list_${a}" style="display:block; overflow:hidden; border-top:1px solid #3c3c3c; width:860px; margin:8px auto;">\n\t\t\t\t\t<div id="initial_clock_cycles_list_${a}_header" style="display:block; overflow:hidden; margin:8px 0px;">\n\t\t\t\t\t\t<label id="initial_clock_cycles_list_${a}_name" style="float:left; height:16px; width:8.25%; margin:2px 4px;"><strong>State ${a}:</strong></label>\n\t\t\t\t\t\t<label for="initial_clock_cycles_list_${a}_durval" style="float:left; height:16px; width:8.25%; margin:2px 4px;">Duration:</label>\n\t\t\t\t\t\t<input id="initial_clock_cycles_list_${a}_durval" type="number" value="${o}" style="float:left; height:20px; width:23.5%;" onchange="checkStateNumbers(this.id, this.value)">\n\t\t\t\t\t\t<label for="initial_clock_cycles_list_${a}_sigval" style="float:left; height:16px; width:7.6%; margin:2px 4px 2px 10px;">Signals:</label>\n\t\t\t\t\t\t<input id="initial_clock_cycles_list_${a}_sigval" type="number" value="${t}" style="float:left; height:20px; width:25%;" onchange="checkStateNumbers(this.id, this.value)">\n\t\t\t\t\t\t<button name="initial_clock_cycles_list_${a}" class="delete-button" style="float:left; height:20px; width:8.5%; padding:0px; margin-left:14px;" onclick="deleteClockCycle(this.name)">Delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="initial_clock_cycles_list_${a}_labels" style="display:block; overflow:hidden; height:16px;">\n\t\t\t\t\t\t<label style="float:left; width:14.5%; margin-left:18%;">Signal Name:</label>\n\t\t\t\t\t\t<label style="float:left; width:9.5%;">MSB:</label>\n\t\t\t\t\t\t<label style="float:left; width:10%;">LSB:</label>\n\t\t\t\t\t\t<label style="float:left; width:8%;">Type:</label>\n\t\t\t\t\t\t<label>Value / Share Index, MSB, LSB:</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id="initial_clock_cycles_list_${a}_signals" style="display:block; overflow:hidden; width:708px; margin:0 auto;">`.concat(e)+"\n\t\t\t\t\t</div>\n\t\t\t\t</div>",n+=t,s+=o,W=a,a++}}catch(e){}h='<h2 class="configheader"><strong>Evaluation Settings</strong></h2>\n\t\t\t<div class="configitem" name="effect_size">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Statistical Effect Size</strong> '.concat("optional"===i.effectSize.importance?"(optional)":"")+`</a> <a class="infochar" href="f" title="${i.effectSize.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<input id="effect_size" type="number" min="0.1" max="1" step="0.1" value="${i.effectSize.value}" style="float:left; width:15%;" onchange="checkFloat(this.id, this.value)">\n\t\t\t\t\t<label style="float:left; margin:5px;">more accuracy</label>\n\t\t\t\t\t<input type="range" id="effect_size_range" list="effect_size_list" min="0.1" value="${i.effectSize.value}" max="1" step="0.1" style="float:left; width:61.4%; margin-top:-2px;" onchange="sliderEffectSizeChanged(this.value)">\n\t\t\t\t\t<label style="float:left; margin:5px;">faster runtime</label>\n\t\t\t\t\t<datalist id="effect_size_list">\n\t\t\t\t\t\t<option>0.1</option>\n\t\t\t\t\t\t<option>0.2</option>\n\t\t\t\t\t\t<option>0.3</option>\n\t\t\t\t\t\t<option>0.4</option>\n\t\t\t\t\t\t<option>0.5</option>\n\t\t\t\t\t\t<option>0.6</option>\n\t\t\t\t\t\t<option>0.7</option>\n\t\t\t\t\t\t<option>0.8</option>\n\t\t\t\t\t\t<option>0.9</option>\n\t\t\t\t\t\t<option>1</option>\n\t\t\t\t\t</datalist>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="max_distance_multivariate">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Maximum Distance between Multivariates</strong> `.concat("optional"===i.maxDistanceMultivariate.importance?"(optional)":"")+`</a> <a href="#evaluation_settings" title="${i.maxDistanceMultivariate.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="number" min="0" id="max_distance_multivariate" value="${i.maxDistanceMultivariate.value}" onchange="checkIntegerEqualZero(this.id, this.value)">\n\t\t\t</div>\n\t\t\t<div class="configitem" name="order_of_test">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Security Order of the Test</strong> `.concat("optional"===i.orderOfTest.importance?"(optional)":"")+`</a> <a href="#evaluation_settings" title="${i.orderOfTest.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="number" min="1" step="1" id="order_of_test" value="${i.orderOfTest.value}" onchange="checkIntegerGreaterZero(this.id, this.value)">\n\t\t\t</div>\n\t\t\t<div class="configitem" name="multivariate_test_yes">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Multivariate Test</strong> `.concat("optional"===i.multivariateTest.importance?"(optional)":"")+`</a> <a href="#evaluation_settings" title="${i.multivariateTest.details}">&#9432;</a><br>\n\t\t\t\t</div>\n\t\t\t\t<input type="radio" id="multivariate_test_yes" name="multivariate_test_radio" class="configradiobutton" value="yes" `.concat("yes"===i.multivariateTest.value?'checked=""':"")+'><label for="multivariate_test_yes">yes</label> <input type="radio" id="multivariate_test_no" name="multivariate_test_radio" class="configradiobutton" value="no" '.concat("no"===i.multivariateTest.value?'checked=""':"")+'><label for="multivariate_test_no">no</label> <input type="radio" id="multivariate_test_exclusive" name="multivariate_test_radio" class="configradiobutton" value="exclusive" '.concat("exclusive"===i.multivariateTest.value?'checked=""':"")+'><label for="multivariate_test_exclusive">exclusive</label>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="transitional_leakage">\n\t\t\t\t<input type="checkbox" id="transitional_leakage" style="float:left; width:4%; margin:4px 0px;" class="configitem" '.concat("yes"===i.transitionalLeakage.value?"checked":"")+"><a><strong>Consider Transitional Leakages</strong> ".concat("optional"===i.transitionalLeakage.importance?"(optional)":"")+`</a> <a href="#evaluation_settings" title="${i.transitionalLeakage.details}">&#9432;</a>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="waveform_simulation">\n\t\t\t\t<input type="checkbox" id="waveform_simulation" style="float:left; width:4%; margin:4px 0px;" class="configitem" `.concat("yes"===i.waveformSimulation.value?"checked":"")+"><a><strong>Store Simulation Waveform</strong> ".concat("optional"===i.waveformSimulation.importance?"(optional)":"")+`</a> <a href="#performance_settings" title="${i.waveformSimulation.details}">&#9432;</a>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="group-seperator"></div>\n\t\t<div class="configgroup" id="wire_probes">\n\t\t\t<h2 class="configheader"><strong>Wire Probes</strong></h2>\n\t\t\t<div class="configitem" name="probes_include">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Included Probes</strong> `.concat("optional"===i.probesInclude.importance?"(optional)":"")+`</a> <a href="#wire_probes" title="${i.probesInclude.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="probes_include" value="${i.probesInclude.value[0]}" onchange="probesChanged(this.id, this.value)">\n\t\t\t\t<div id="probes_include_hint" style="display:${e}; overflow:hidden;">\n\t\t\t\t\t<label style="float:left; margin:4px 10px;"><strong>Full Vector:</strong> includes all the bits of the multi-bit wire</label>\n\t\t\t\t\t<label style="float:right; margin:4px 10px;"><strong>Glitch Extended:</strong> includes all the wires that contribute to the selected wire.</label>\n\t\t\t\t</div>\n\t\t\t\t<div id="probes_include_list" style="overflow:hidden; margin:0px auto; width:860px;">`.concat(B)+'\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="probes_exclude">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Excluded Probes</strong> '.concat("optional"===i.probesExclude.importance?"(optional)":"")+`</a> <a href="#wire_probes" title="${i.probesExclude.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="probes_exclude" value="${i.probesExclude.value[0]}" onchange="probesChanged(this.id, this.value)">\n\t\t\t\t<div id="probes_exclude_hint" style="display:${t}; overflow:hidden;">\n\t\t\t\t\t<label style="float:left; margin:4px 10px;"><strong>Full Vector:</strong> includes all the bits of the multi-bit wire</label>\n\t\t\t\t\t<label style="float:right; margin:4px 10px;"><strong>Glitch Extended:</strong> includes all the wires that contribute to the selected wire.</label>\n\t\t\t\t</div>\n\t\t\t\t<div id="probes_exclude_list" style="overflow:hidden; margin:0px auto; width:860px;">`.concat(j)+'\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<datalist id="wires_list">\n\t\t\t'.concat(V)+'\n\t\t\t</datalist>\n\t\t</div>\n\t\t<div class="group-seperator"></div>\n\t\t<div class="configgroup" id="clock_cycles_and_end_condition">\n\t\t\t<h2 class="configheader"><strong>Clock Cycles and End Condition</strong></h2>\n\t\t\t<div class="configitem" name="no_of_test_clock_cycles">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Number of Test Clock Cycles</strong> '.concat("optional"===i.noOfTestClockCycles.importance?"(optional)":"")+`</a> <a href="#clock_cycles_and_end_condition" title="${i.noOfTestClockCycles.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div id="no_of_test_clock_cycles" style="margin:2px 0px 10px 0px; overflow:hidden;">\n\t\t\t\t\t<label for="no_of_test_clock_cycles_begin" style="float:left; width:18%; margin:7px;">Test Clock Cycles Begin:</label>\n\t\t\t\t\t<input id="no_of_test_clock_cycles_begin" type="number" min="1" max="${i.maxClockCycle.value}" value="" placeholder="${i.maxClockCycle.value}-1" style="float:left; width:23%;" onchange="checkTestClockCycleBit(this.id, this.value)">\n\t\t\t\t\t<label for="no_of_test_clock_cycles_end" style="float:left; width:16%; margin:7px;">Test Clock Cycles End:</label>\n\t\t\t\t\t<input id="no_of_test_clock_cycles_end" type="number" min="1" max="${i.maxClockCycle.value}" value="" placeholder="${i.maxClockCycle.value}-1" style="float:left; width:23%;" onchange="checkTestClockCycleBit(this.id, this.value)">\n\t\t\t\t\t<button class="action-button" style="float:right; width:9.5%; margin:1px;" onclick="addTestClockCycle()">Create</button>\n\t\t\t\t</div>`.concat(R)+'\n\t\t\t</div>\n\t\t\t<div class="configitem" name="max_clock_cycle">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Maximum Number of Clock Cycles</strong> '.concat("optional"===i.maxClockCycle.importance?"(optional)":"")+`</a> <a href="#clock_cycles_and_end_condition" title="${i.maxClockCycle.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="number" min="1" id="max_clock_cycle" value="${i.maxClockCycle.value}" onchange="checkIntegerGreaterZero(this.id, this.value)">\n\t\t\t</div>\n\t\t\t<div class="configitem" name="end_wait_cycles">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Number of Wait Cycles after End Condition</strong> `.concat("optional"===i.endWaitCycles.importance?"(optional)":"")+`</a> <a href="#clock_cycles_and_end_condition" title="${i.endWaitCycles.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="number" min="0" max="${i.maxClockCycle.value}" id="end_wait_cycles" value="${i.endWaitCycles.value}" onchange="checkIntegerEqualZero(this.id, this.value)">\n\t\t\t</div>\n\t\t\t<div class="configitem" name="end_condition">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>End Condition for Simulations</strong> `.concat("optional"===i.endCondition.importance?"(optional)":"")+`</a> <a href="#clock_cycles_and_end_condition" title="${i.endCondition.details}">&#9432;</a>\n\t\t\t\t</div>`.concat(P)+'\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="group-seperator"></div>\n\t\t<div class="configgroup" id="clock_signal_name_and_always_random_inputs">\n\t\t\t<h2 class="configheader"><strong>Clock Signal Name and Always Random Inputs</strong></h2>\n\t\t\t<div class="configitem" name="clock_signal_name">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Clock Signal Name</strong> '.concat("optional"===i.clockSignalName.importance?"(optional)":"")+`</a> <a href="#clock_signal_name_and_always_random_inputs" title="${i.clockSignalName.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden; float:left; width:75%; margin:0px 0px 10px 0px;">\n\t\t\t\t\t<label for="clock_signal_name">Signal Name/Vector Name:</label>\n\t\t\t\t\t<select id="clock_signal_name" style="display:inline; float:left; color:#cccccc; background-color:#3c3c3c; width:100%; height:29px;" onfocus="focusCSN()" onchange="inputSignalNamesCSN(this.id,'')">`.concat(_)+`\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden; float:right; width:24.5%; margin:0px 0px 10px 0px;">\n\t\t\t\t\t<label for="clock_signal_name_bit">Signal Bit:</label>\n\t\t\t\t\t<input type="number" id="clock_signal_name_bit" value="${k}" min="${this.inputSignals[b].min}" max="${this.inputSignals[b].max}" placeholder="${this.inputSignals[b].placeholder}" `.concat(""===this.inputSignals[b].min?"readonly":"")+' onchange="checkBitField(this.id)">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="no_of_always_random_inputs">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Number of Always Random Inputs</strong> '.concat("optional"===i.noOfAlwaysRandomInputs.importance?"(optional)":"")+`</a> <a href="#clock_signal_name_and_always_random_inputs" title="${i.noOfAlwaysRandomInputs.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden; float:left; width:75%; margin:0px 0px 10px 0px;">\n\t\t\t\t\t<label for="always_random_inputs">Signal Name/Vector Name:</label>\n\t\t\t\t\t<select id="always_random_inputs" style="display:inline; float:left; color:#cccccc; background-color:#3c3c3c; width:100%; height:29px;" onchange="inputSignalNamesARI(this.id)">`.concat(S)+`\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden; float:left; width:7%; margin:0px 0px 10px 5px;">\n\t\t\t\t\t<label for="always_random_inputs_msb">MSB:</label>\n\t\t\t\t\t<input type="number" id="always_random_inputs_msb" min="${this.inputSignals[0].min}" max="${this.inputSignals[0].max}" placeholder="${this.inputSignals[0].placeholder}" `.concat(""===this.inputSignals[0].min?"readonly":"")+` onchange="checkBitField(this.id)">\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden; float:left; width:7%; margin:0px 0px 10px 5px;">\n\t\t\t\t\t<label for="always_random_inputs_lsb">LSB:</label>\n\t\t\t\t\t<input type="number" id="always_random_inputs_lsb" min="${this.inputSignals[0].min}" max="${this.inputSignals[0].max}" placeholder="${this.inputSignals[0].placeholder}" `.concat(""===this.inputSignals[0].min?"readonly":"")+' onchange="checkBitField(this.id)">\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden; float:right; width:9.5%; margin:16px 0px 11px 0px;">\n\t\t\t\t\t<button class="action-button" onclick="addRandomInputs()">Create</button>\n\t\t\t\t</div>'.concat(x)+'\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="group-seperator"></div>\n\t\t<div class="configgroup" id="groups_outputs_initial_clock_cycles">\n\t\t\t<h2 class="configheader"><strong>Groups, Outputs and Initial Clock Cycles</strong></h2>\n\t\t\t<div class="configitem" name="number_of_groups">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Number of Groups</strong> '.concat("optional"===i.noOfGroups.importance?"(optional)":"")+`</a> <a href="#groups_outputs_initial_clock_cycles" title="${i.noOfGroups.details}">&#9432;</a>\n\t\t\t\t\t<a style="margin-left:28.5%;"><strong>Size of Groups</strong> (in Bits)</a> <a href="#groups_outputs_initial_clock_cycles" title="Hexadecimal values will be converted to binary values if the selected size is not a divisor of 4.">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden;">`.concat($)+'\n\t\t\t\t</div>\n\t\t\t\t<div id="number_of_groups_list" style="display:block; overflow:hidden; width:860px; margin:0 auto;">'.concat(L)+'\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="no_of_outputs">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Output Shares</strong> '.concat("optional"===i.noOfOutputs.importance?"(optional)":"")+`</a> <a href="#groups_outputs_initial_clock_cycles" title="${i.noOfOutputs.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<label for="no_of_outputs_name">Share Name:</label> \n\t\t\t\t\t<label for="no_of_outputs_msb" style="margin-left:35.75%;">MSB:</label>\n\t\t\t\t\t<label for="no_of_outputs_lsb" style="margin-left:18.75%;">LSB:</label>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden; margin-bottom:8px;">\n\t\t\t\t\t<select id="no_of_outputs_name" style="float:left; width:42.5%; height:29px; color:#cccccc; background-color:#3c3c3c;" onchange="checkOutputName(this.id)">`.concat(N)+`\n\t\t\t\t\t</select>\n\t\t\t\t\t<input type="number" id="no_of_outputs_msb" min="${this.outputSignals[0].min}" max="${this.outputSignals[0].max}" placeholder="${this.outputSignals[0].max}-${this.outputSignals[0].min}" style="float:left; width:19.75%; margin-left:3%;" onchange="checkOutputBit(this.id)">\n\t\t\t\t\t<input type="number" id="no_of_outputs_lsb" min="${this.outputSignals[0].min}" max="${this.outputSignals[0].max}" placeholder="${this.outputSignals[0].max}-${this.outputSignals[0].min}" style="float:left; width:19.75%; margin-left:3%;" onchange="checkOutputBit(this.id)">\n\t\t\t\t\t<button class="action-button" style="float:right; width:9.5%; margin:1px;" onclick="addOutputShare()">Create</button>\n\t\t\t\t</div>\n\t\t\t\t<div id="no_of_outputs_list" style="display:block; overflow:hidden; width:860px; margin:0 auto;">`.concat(M)+'\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="no_of_initial_clock_cycles">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>States of Initial Clock Cycles</strong> '.concat("optional"===i.noOfInitialClockCycles.importance?"(optional)":"")+`</a> <a href="#groups_outputs_initial_clock_cycles" title="${i.noOfInitialClockCycles.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<label for="no_of_initial_clock_cycles" style="float:left; margin:5px 3px;">Total Number of States:</label> <a style="float:left; margin:2px 1px;" href="#groups_outputs_initial_clock_cycles" title="Specify the duration of the new state you want to create by entering an integer number.\nNote that you can edit this range after creating the new state!">&#9432;</a>\n\t\t\t\t\t<input type="number" id="no_of_initial_clock_cycles" min="1" value="${W}" style="float:left; width:64.5%; margin:0px 5px;" onchange="checkInitialClockCyclesStates()">\n\t\t\t\t\t<button class="delete-button" style="float:right; width:9.5%; margin:1px;">Delete All</button>\n\t\t\t\t</div>\n\t\t\t\t<div id="initial_clock_cycles_list">`.concat(G)+'\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class="group-seperator"></div>\n\t\t<div class="configgroup" id="performance_settings">\n\t\t\t<h2 class="configheader"><strong>Performance Settings</strong></h2>\n\t\t\t<div class="configitem" name="max_no_of_threads">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Maximum Number of Threads</strong> '.concat("optional"===i.maxNoOfThreads.importance?"(optional)":"")+`</a> <a href="#performance_settings" title="${i.maxNoOfThreads.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="number" min="1" id="max_no_of_threads" value="${i.maxNoOfThreads.value}" onchange="checkIntegerGreaterZero(this.id, this.value)">\n\t\t\t</div>\n\t\t\t<div class="configitem" name="no_of_entries_in_report">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Number of Entries in Report</strong> `.concat("optional"===i.noOfEntriesInReport.importance?"(optional)":"")+`</a> <a href="#performance_settings" title="${i.noOfEntriesInReport.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="number" min="1" id="no_of_entries_in_report" value="${i.noOfEntriesInReport.value}" onchange="checkIntegerGreaterZero(this.id, this.value)">\n\t\t\t</div>\n\t\t\t<div class="configitem" name="no_of_probing_sets_per_step">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Number of Probing Sets per Step</strong> `.concat("optional"===i.noOfProbingSetsPerStep.importance?"(optional)":"")+`</a> <a href="#performance_settings" title="${i.noOfProbingSetsPerStep.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<input type="text" id="no_of_probing_sets_per_step" value="${i.noOfProbingSetsPerStep.value}" onchange="checkIntegerGreaterZero(this.id, this.value)">\n\t\t\t</div>\n\t\t\t<div class="configitem" name="no_of_simulations">\n\t\t\t\t<a><strong>Total Number of Simulations</strong> `.concat("optional"===i.noOfSimulations.importance?"(optional)":"")+`</a> <a href="#performance_settings" title="${i.noOfSimulations.details}">&#9432;</a>\n\t\t\t\t<input type="number" min="1" step="1" id="no_of_simulations" value="${i.noOfSimulations.value}" onchange="noOfSimulationsChanged(this.id)">\n\t\t\t</div>\n\t\t\t<div class="configitem" name="no_of_step_simulations">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Number of Simulations per Step</strong> `.concat("optional"===i.noOfStepSimulations.importance?"(optional)":"")+`</a> <a href="#performance_settings" title="${i.noOfStepSimulations.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div style="overflow:hidden;">\n\t\t\t\t\t<input type="number" id="no_of_step_simulations" min="1" value="${i.noOfStepSimulations.value}" style="float:left; width:15%;" onchange="noOfSimulationsChanged(this.id)">\n\t\t\t\t\t<input type="range" id="no_of_step_simulations_range" list="no_of_step_simulations_list" min="0" value="${p}" max="${T.length-1}" step="1" style="float:right; width:84%; margin-top:-4px;" onchange="sliderSimulationsChanged(this.id)">\n\t\t\t\t\t<datalist id="no_of_step_simulations_list">`.concat(D)+'\n\t\t\t\t\t</datalist>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="no_of_step_write_results">\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<a><strong>Number of Simulation Results per Report</strong> '.concat("optional"===i.noOfStepWriteResults.importance?"(optional)":"")+`</a> <a href="#performance_settings" title="${i.noOfStepWriteResults.details}">&#9432;</a>\n\t\t\t\t</div>\n\t\t\t\t<div style="display:block; overflow:hidden;">\n\t\t\t\t\t<input type="number" id="no_of_step_write_results" min="1" value="${i.noOfStepWriteResults.value}" style="float:left; width:15%;" onchange="noOfSimulationsChanged(this.id)">\n\t\t\t\t\t<input type="range" id="no_of_step_write_results_range" list="no_of_step_write_results_list" min="0" value="${y}" max="${I.length-1}" step="1" style="float:right; width:84%; margin-top:-4px;" onchange="sliderSimulationsChanged(this.id)">\n\t\t\t\t\t<datalist id="no_of_step_write_results_list">`.concat(A)+'\n\t\t\t\t\t</datalist>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="compact_distributions">\n\t\t\t\t<input type="checkbox" id="compact_distributions" style="float:left; width:4%; margin:4px 0px;" class="configitem" '.concat("yes"===i.compactDistributions.value?"checked":"")+"><a><strong> Compact Distributions</strong> ".concat("optional"===i.compactDistributions.importance?"(optional)":"")+`</a> <a href="#evaluation_settings" title="${i.compactDistributions.details}">&#9432;</a>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="minimize_probe_sets">\n\t\t\t\t<input type="checkbox" id="minimize_probe_sets" style="float:left; width:4%; margin:4px 0px;" class="configitem" `.concat("yes"===i.minimizeProbeSets.value?"checked":"")+"><a><strong> Minimize Probing Sets</strong> ".concat("optional"===i.minimizeProbeSets.importance?"(optional)":"")+`</a> <a href="#evaluation_settings" title="${i.minimizeProbeSets.details}">&#9432;</a>\n\t\t\t</div>\n\t\t\t<div class="configitem" name="remove_full_probing_sets">\n\t\t\t\t<input type="checkbox" id="remove_full_probing_sets" style="float:left; width:4%; margin:4px 0px;" class="configitem" `.concat("yes"===i.removeFullProbingSets.value?"checked":"")+'><a><strong> Remove Probing Sets with Full <a style="text-decoration-line: underline !important; text-decoration-color: white !important;" href="#evaluation_settings">Effect Size</a></strong> '.concat("optional"===i.removeFullProbingSets.importance?"(optional)":"")+`</a> <a href="#performance_settings" title="${i.removeFullProbingSets.details}">&#9432;</a>\n\t\t\t</div>\n\t\t</div>`}else h='<div style="text-align:center;">\n\t\t\t<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" fill="red" width="100%" height="60"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.6 1c1.6.1 3.1.9 4.2 2 1.3 1.4 2 3.1 2 5.1 0 1.6-.6 3.1-1.6 4.4-1 1.2-2.4 2.1-4 2.4-1.6.3-3.2.1-4.6-.7-1.4-.8-2.5-2-3.1-3.5C.9 9.2.8 7.5 1.3 6c.5-1.6 1.4-2.9 2.8-3.8C5.4 1.3 7 .9 8.6 1zm.5 12.9c1.3-.3 2.5-1 3.4-2.1.8-1.1 1.3-2.4 1.2-3.8 0-1.6-.6-3.2-1.7-4.3-1-1-2.2-1.6-3.6-1.7-1.3-.1-2.7.2-3.8 1-1.1.8-1.9 1.9-2.3 3.3-.4 1.3-.4 2.7.2 4 .6 1.3 1.5 2.3 2.7 3 1.2.7 2.6.9 3.9.6zM7.9 7.5L10.3 5l.7.7-2.4 2.5 2.4 2.5-.7.7-2.4-2.5-2.4 2.5-.7-.7 2.4-2.5-2.4-2.5.7-.7 2.4 2.5z"></path></svg>\n\t\t\t'.concat('<h2 style="color:#ff0000 !important;">Error! The path to config.set is not specified.</h2>')+"\n\t\t\t".concat(u)+"\n\t\t\t</div>";return`<!DOCTYPE html>\n\t\t\t\t<html lang="en">\n                <head>\n                    <meta charSet="utf-8"/>\n\t\t\t\t\t<title>${s.title}</title>\n\t\t\t\t\t<link href="${l}" rel="stylesheet">\n\t\t\t\t\t<link href="${r}" rel="stylesheet">\n\t\t\t\t\t<link href="${c}" rel="stylesheet">\n                </head>\n                <body class="configpage">\n\t\t\t\t\t<script src="${o}"><\/script>\n\t\t\t\t\t<div onclick="scroll2top()" id="scroll2top">\n                            <svg width="20" height="20" viewBox="0 0 15 15" xmlns="http://www.w3.org/2000/svg" fill="currentColor">\n                                <path d="M5.36891 7.91926L7.50833 5.77984V11.532H8.50833V5.85271L10.5749 7.91926L11.282 7.21216L8.32545 4.25562H7.61835L4.6618 7.21216L5.36891 7.91926Z"/>\n                                <path d="M14 8C14 11.3137 11.3137 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.3137 2 14 4.68629 14 8ZM13 8C13 5.23858 10.7614 3 8 3C5.23858 3 3 5.23858 3 8C3 10.7614 5.23858 13 8 13C10.7614 13 13 10.7614 13 8Z"/>\n                            </svg>\n                        </div>\n\t\t\t\t\t<div class="configbar">\n\t\t\t\t\t\t<div style="float:left; width:80%;"><h1>Configuration Page</h1></div>\n\t\t\t\t\t\t<div style="float:right; width:12%; margin-right:10px;"><button class="action-button" onclick="save()">Save (Ctrl+S)</button></div>\n\t\t\t\t\t</div><br><br>\n\t\t\t\t\t<div class="configgroup" id="arguments" style="margin-top:24px !important;">\n\t\t\t\t\t\t`.concat(d)+'\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="group-seperator"></div>\n\t\t\t\t\t<div class="configgroup" id="evaluation_settings">\n\t\t\t\t\t\t'.concat(h)+"\n\t\t\t\t</body>\n            </html>"}}t.WebviewProvider=s,s.viewType="prolead-config",s.title="Configuration Page",s.showOptions=n.ViewColumn.One,s.options={enableScripts:!0,retainContextWhenHidden:!0},s.inputSignals=[],s.outputSignals=[],s.wiresSingles=[],s.wiresVectors=[]},496:e=>{e.exports=require("vscode")},523:e=>{e.exports=require("dns")},147:e=>{e.exports=require("fs")},561:e=>{e.exports=require("node:fs")},742:e=>{e.exports=require("node:process")}},t={};function i(a){var n=t[a];if(void 0!==n)return n.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,i),s.exports}var a={};(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=i(496),n=i(147),s=i(742),o=i(684),l=i(328),r=i(474),c=i(153),d=i(193),h=i(750),u=i(49),p=i(582),g=i(528);e.activate=function(e){"linux"!==s.platform&&t.window.showWarningMessage("PROLEAD: The extension is designed for linux systems. Therefore, not all parts of the extension will work!"),t.workspace.getConfiguration("prolead").update("runTime.timesActivated",Number(t.workspace.getConfiguration("prolead").get("runTime.timesActivated"))+1,!0),""===t.workspace.getConfiguration("prolead").get("templates.configFile")&&t.workspace.getConfiguration("prolead").update("templates.configFile",e.extensionPath+"/templates/config.set",!0),""===t.workspace.getConfiguration("prolead").get("templates.designFile")&&t.workspace.getConfiguration("prolead").update("templates.designFile",e.extensionPath+"/templates/design.v",!0),""===t.workspace.getConfiguration("prolead").get("templates.libraryFile")&&t.workspace.getConfiguration("prolead").update("templates.libraryFile",e.extensionPath+"/templates/library.lib",!0),""===t.workspace.getConfiguration("prolead").get("templates.linkerFile")&&t.workspace.getConfiguration("prolead").update("templates.linkerFile",e.extensionPath+"/templates/linker.ld",!0),""===t.workspace.getConfiguration("prolead").get("templates.moduleName")&&t.workspace.getConfiguration("prolead").update("templates.moduleName","circuit",!0),""===t.workspace.getConfiguration("prolead").get("templates.libraryName")&&t.workspace.getConfiguration("prolead").update("templates.libraryName","NANG45",!0);const i=new r.StatusProvider,a=new u.InstallationProvider(e.extensionPath),f=new o.ConfigProvider(e.extensionPath),m=new l.PreparationProvider(f,i,e.extensionPath),b=new h.EvaluationProvider(f,i);Number(t.workspace.getConfiguration("prolead").get("runTime.timesActivated"))<3&&!0===t.workspace.getConfiguration("prolead").get("runTime.welcomePage")?t.commands.executeCommand("workbench.action.openWalkthrough","ChairImpSec.prolead#proleadwalkthrough",!1):3===Number(t.workspace.getConfiguration("prolead").get("runTime.timesActivated"))&&t.workspace.getConfiguration("prolead").update("runTime.welcomePage",!1,!0),void 0!==t.workspace.workspaceFolders&&(f.projectFolder=t.workspace.workspaceFolders.map((e=>e.uri.path))[0],n.existsSync(f.projectFolder+"/args.set")&&n.existsSync(f.projectFolder+"/config.set")&&(f.argsPath=f.projectFolder+"/args.set",f.configPath=f.projectFolder+"/config.set",f.configFile.value=f.configPath,f.readFiles(),!0===t.workspace.getConfiguration("prolead").get("runTime.welcomePage")&&t.commands.executeCommand("workbench.action.openWalkthrough","ChairImpSec.prolead#proleadwalkthrough",!1),f.backup())),e.subscriptions.push(t.commands.registerCommand("prolead.configure",(()=>{if(!n.existsSync(f.argsPath))return t.window.showErrorMessage("PROLEAD: File args.set not found! Please open a project to be able to configure it."),-1;if(!n.existsSync(f.configFile.value))return t.window.showErrorMessage("PROLEAD: File config.set not found! Please open a project to be able to configure it."),-1;const i=t.window.createWebviewPanel(c.WebviewProvider.viewType,c.WebviewProvider.title,c.WebviewProvider.showOptions,c.WebviewProvider.options);i.webview.html=c.WebviewProvider.show(i.webview,e.extensionUri,f),i.webview.onDidReceiveMessage((e=>c.WebviewProvider.handleMessage(e,f,i)),void 0,e.subscriptions)}))),e.subscriptions.push(t.commands.registerCommand("prolead.evaluate",(()=>{b.evaluate()}))),e.subscriptions.push(t.commands.registerCommand("prolead.getcode",(()=>{m.getCode()}))),e.subscriptions.push(t.commands.registerCommand("prolead.installdpncs",(()=>{a.getPassword().then((()=>{a.installDeps()}))}))),e.subscriptions.push(t.commands.registerCommand("prolead.installrqmts",(()=>{t.window.withProgress({location:t.ProgressLocation.Notification,title:"PROLEAD",cancellable:!1},(e=>{function i(e,t,a){if(a--,!1===n&&a>0)setTimeout((()=>{i(e,t,a)}),1e3);else{if(!0===n&&a>0)return e(),1;if(a<=0)return console.log("time ran out!"),t(),-1}}let n=!1;return e.report({increment:0,message:"..."}),a.getPassword().then((()=>{e.report({increment:10,message:"Connecting the universe repository"}),a.connectRepo().then((()=>{e.report({increment:10,message:"Installing git"}),a.installPackageGit().then((()=>{e.report({increment:10,message:"Installing g++"}),a.installPackageGpp().then((()=>{e.report({increment:10,message:"Installing make"}),a.installPackageMake().then((()=>{e.report({increment:10,message:"Installing libboost"}),a.installPackageLibboost().then((()=>{e.report({increment:10,message:"Cloning the source code"}),a.cloneSourceCode().then((()=>{e.report({increment:10,message:"Building the source code"}),a.buildSourceCode().then((()=>{n=!0})).catch((()=>new Promise(((e,i)=>{t.window.showErrorMessage("PROLEAD: Building source code failed"),i()}))))})).catch((()=>new Promise(((e,i)=>{t.window.showErrorMessage("PROLEAD: Cloning source code failed"),i()}))))})).catch((()=>new Promise(((e,i)=>{t.window.showErrorMessage("PROLEAD: Installing libboost failed"),i()}))))})).catch((()=>new Promise(((e,i)=>{t.window.showErrorMessage("PROLEAD: Installing make failed"),i()}))))})).catch((()=>new Promise(((e,i)=>{t.window.showErrorMessage("PROLEAD: Installing g++ failed"),i()}))))})).catch((()=>new Promise(((e,i)=>{t.window.showErrorMessage("PROLEAD: Installing git failed"),i()}))))}))})),new Promise(((e,t)=>{i(e,t,60)}))}))}))),e.subscriptions.push(t.commands.registerCommand("prolead.createproject",(()=>{const i=t.window.createWebviewPanel(d.ProjectProvider.viewType,d.ProjectProvider.title,d.ProjectProvider.showOptions,d.ProjectProvider.options);i.webview.html=d.ProjectProvider.show(i.webview,e.extensionUri),i.webview.onDidReceiveMessage((e=>d.ProjectProvider.handleMessage(e,f,i)),void 0,e.subscriptions)}))),e.subscriptions.push(t.commands.registerCommand("prolead.editlibrary",(()=>{if(!n.existsSync(f.libraryFile.value))return t.window.showErrorMessage("PROLEAD: Library file not found! Please open a project to be able to edit its library."),-1;const i=t.window.createWebviewPanel(p.LibraryProvider.viewType,p.LibraryProvider.title,p.LibraryProvider.showOptions,p.LibraryProvider.options);i.webview.html=p.LibraryProvider.show(i.webview,e.extensionUri,f),i.webview.onDidReceiveMessage((e=>p.LibraryProvider.handleMessage(e,f,i)),void 0,e.subscriptions)}))),e.subscriptions.push(t.commands.registerCommand("prolead.prepare",(()=>{m.startup()}))),i.set("Activated"),i.show();const y=new g.StatusCommand("PROELAD: New Project","$(folder-opened)","prolead.createproject","PROELAD: New Project (Ctrl + Alt + P)",1),w=new g.StatusCommand("PROELAD: Edit Library","$(library)","prolead.editlibrary","PROELAD: Edit Library",2),v=new g.StatusCommand("PROELAD: Config Page","$(gear)","prolead.configure","PROELAD: Config Page (Ctrl + Alt + C)",3),_=new g.StatusCommand("PROELAD: Prepare Code","$(checklist)","prolead.prepare","PROELAD: Prepare Code (Ctrl + Alt + S)",4),k=new g.StatusCommand("PROELAD: Evaluate Design","$(play-circle)","prolead.evaluate","PROELAD: Evaluate Design (Ctrl + Alt + F5)",5);!0===t.workspace.getConfiguration("prolead").get("statusBar.proleadIcons")?(y.show(),w.show(),v.show(),_.show(),k.show(),i.background("default")):i.background("red"),e.subscriptions.push(t.commands.registerCommand("prolead.switchstatusicons",(()=>{"hidden"===y.status&&"hidden"===w.status&&"hidden"===v.status&&"hidden"===_.status&&"hidden"===k.status?(y.show(),w.show(),v.show(),_.show(),k.show(),i.background("default")):(y.hide(),w.hide(),v.hide(),_.hide(),k.hide(),i.background("red"))})))},e.deactivate=function(){}})(),module.exports=a})();